analyzeHttpd() {
#@(t)  |UNAME |out|mod|set|sys|net|app|mis| description                                                                                        |
#@(p)  |*     | x |   |   |   |   | x |   | analyze httpd.conf for ProxyPassReverse and JkMounts (mod_jk)                                      |
# TODO: is FULL_DISPLAY necessary ? waddabat Verbose ?
local mainConfFile confFile confFiles regexp FULL_DISPLAY CSV NORMALIZATION PARAMS ServerRoot JkWorkersFile workerList worker JkMounts
FULL_DISPLAY=false
CSV=false
NORMALIZATION="normalizeCols '+++-+-'"
PARAMS=

# getopts:
local _OPT OPTIND OPTARG OPTIND _NOARGS
while getopts :cfw:j:xX _OPT 2>/dev/null
do
{
  case ${_OPT} in
    c) CSV=true; PARAMS="${PARAMS} -c"; NORMALIZATION=${DECOLORIZE} ;;
    f) FULL_DISPLAY=true; PARAMS="${PARAMS} -f" ;;
    w) workerList="${OPTARG}"; PARAMS="${PARAMS} -w \"${workerList}\"" ;;
    j) JkMounts="${OPTARG}"; PARAMS="${PARAMS} -j \"${JkMounts}\"" ;;
    x) local Verbose=true; PARAMS="${PARAMS} -x" ;;
    X) local Debug=true; local Verbose=true; PARAMS="${PARAMS} -X" ;;
    *) _NOARGS="${_NOARGS}${_NOARGS+, }-${OPTARG}" ;;
  esac
}
done
shift $((OPTIND - 1))
[ "X${_NOARGS}" != "X" ] && ERROR param "${_NOARGS}"

( [ -n "${workerList}" -a -z "${JkMounts}" ] || ! (($#)) ) && echo2 "${C}${FUNCNAME}${c} [-xXcf] [-w \"worker ..\" <-j \"JkMount ..\">] </path/httpd.conf> [regexp] ${g8}(worker & JkMount detection is automatic, without -w)${END}" && return 99
mainConfFile=$(realpath "$1")
regexp="${2:-.}"

# TODO: JkWorkersFile

[ ! -s "${mainConfFile}" ] && ERROR exist "${mainConfFile}" 0 && return 1
ServerRoot=$(${awk} '/^[[:blank:]]*ServerRoot/ {$1=""; gsub("\"","",$0);print}' "${mainConfFile}") && ServerRoot=$(trim "${ServerRoot}")
$Debug && echo2 "${m}ServerRoot=${ServerRoot}${END}"

$FULL_DISPLAY && echo "${Rb}${FUNCNAME}: ${c}${mainConfFile}${END}"
egrep -q "ProxyPassReverse|JkWorkersFile" "${mainConfFile}" && confFiles="${mainConfFile}"
grep -q JkWorkersFile "${mainConfFile}" && JkWorkersFile=$(${awk} '/^[[:blank:]]*JkWorkersFile/ {$1=""; gsub("\"","",$0);print}' "${mainConfFile}") && JkWorkersFile=$(trim "${JkWorkersFile}")

confFiles="${confFiles} $(${awk} '/^[[:blank:]]*Include/ {$1=""; gsub("\"","",$0);print}' "${mainConfFile}")"

# gotta be under ServerRoot for the conf files to analyze, coz 99% of the time they are defined relative to ServerRoot
cd ${ServerRoot}
if [ -s "${JkWorkersFile}" -a -z "${workerList}" ]; then
  workerList="$(${awk} -F= '/^[[:blank:]]*worker.list/ {gsub("\"","",$0);gsub(","," ",$0);print $2}' "${JkWorkersFile}")"
  PARAMS="${PARAMS} -w \"${workerList}\""
  $Debug && echo2 "${m}workerList=${workerList}${END}"
  for worker in ${workerList}; do
    JkMounts="${JkMounts}${JkMounts:+ }$(grep "worker.${worker}.host=" "${JkWorkersFile}" | cut -d= -f2):$(grep "worker.${worker}.port=" "${JkWorkersFile}" | cut -d= -f2)"
  done
  PARAMS="${PARAMS} -j \"${JkMounts}\""
  $Debug && echo2 "${m}JkMounts=${JkMounts}${END}"
fi
for confFile in ${confFiles}; do
  $Debug && echo2 "${M}analyzeHttpdProxies $PARAMS \"${confFile}\" \"${regexp}\"${END}"
  eval analyzeHttpdProxies $PARAMS "${confFile}" "${regexp}"
done | ${NORMALIZATION}
cd - >/dev/null
}
