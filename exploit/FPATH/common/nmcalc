nmcalc() {
(($# < 1)) && ${print} "nmcalc <mask x.x.x.x> -> cidr\nnmcalc <cidr xx> -> mask" && return 99
# if $1 IS and is only a integer,
# INFO: 2 different way to check a variable is a number, look for the best:
# if [ ! -z "${aa##*[!0-9]*}" ]
if ${print} '%d' "$1" &>/dev/null
then
  local i mask=""
  local full_octets=$(($1/8))
  local partial_octet=$(($1%8))
  for ((i=0;i<4;i+=1)); do
    if [ $i -lt $full_octets ]; then
      mask+=255
    elif [ $i -eq $full_octets ]; then
      mask+=$((256 - 2**(8-$partial_octet)))
    else
      mask+=0
    fi  
    test $i -lt 3 && mask+=.
  done
  echo $mask
else
  local nbits=0
  local IFS=.
  for dec in $1 ; do
  case $dec in
    255) let nbits+=8;;
    254) let nbits+=7;;
    252) let nbits+=6;;
    248) let nbits+=5;;
    240) let nbits+=4;;
    224) let nbits+=3;;
    192) let nbits+=2;;
    128) let nbits+=1;;
    0);;
    *) echo2 "Error: $dec is not recognised"; return 1 ;;
  esac
  done
  echo "$nbits"
fi
}
