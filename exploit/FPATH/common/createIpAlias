createIpAlias() {
(($# < 3)) && printf " createIpAlias <IP> <netmask|cidr> <eth> [aliasNum]\n createIpAlias 192.168.16.177 25 eth2 2\n" && return 99
local ipAddress=$1
local netmask=$2
local device=$3
local aliasNum=$4

local OIFS=$IFS
local mask cidr

# INFO: 2 different way to check a variable is a number, look for the best:
# if [ ! -z "${aa##*[!0-9]*}" ]
if printf '%d' "$netmask" &>/dev/null
then
	cidr=$netmask; mask=$(nmcalc $netmask)
else
	cidr=$(nmcalc $netmask); mask=$netmask
fi

case ${UNAME} in
Linux)
  interfaceType=""
  existingIP=""

  # local IP="/sbin/ip"
  local link=$(ip -4 link ls "${device}" | head -n1)
  # 4: eth2: <BROADCAST,MULTICAST,UP> mtu 1500 qdisc pfifo_fast qlen 100
  #     link/ether 00:0d:88:c5:ca:20 brd ff:ff:ff:ff:ff:ff
  if test -n "${link}"; then
    IFS=" /:,<"
    set ${link}
    interfaceType=$4
    IFS=$OIFS

    local addr=$(ip -4 addr ls "${device}" to ${ipAddress} | grep inet | grep -v :)
    # 4: eth2: <BROADCAST,MULTICAST,UP> mtu 1500 qdisc pfifo_fast qlen 100
    #     inet 192.168.16.175/25 brd 192.168.16.255 scope global secondary eth2:FWB33
    if test -n "${addr}"; then
      IFS=" /"
      set ${addr}
      existingIP=$2
      IFS=$OIFS
    fi
  fi
  if test -z "${existingIP}"; then
    [ -z "${aliasNum}" ] && nbCurrentAliases=$(ifconfig -a | grep ${device}: | wc -l) && let aliasNum=nbCurrentAliases+1
    if test "${interfaceType}" = "POINTOPOINT"; then
      ip -4 addr add ${ipAddress} dev ${device} scope global label ${device}:${aliasNum}
    fi
    if test "${interfaceType}" = "BROADCAST"; then
      ip -4 addr add ${ipAddress}/${cidr} dev ${device} brd + scope global label ${device}:${aliasNum}
    fi
  fi
;;
AIX)
lsattr -El "${device}" -a alias4 | grep "${ipAddress},${mask}" && ERROR existing_alias "Alias ${ipAddress},${mask} already exist!" || chdev -l "${device}" -a alias4="${ipAddress},${mask}"
;;
esac
}

