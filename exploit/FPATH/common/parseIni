parseIni() {
# parseIni will parse file.ini for SECTION, then eval keys into env.
# 1) all keys will be loaded with name "key" and array "a_key[0]"
# 2) duplicate keys will be in arrays named "a_key"
# 3) keys from SECTION "default" will be named "default_key" as well

(($# < 1 )) && echo2 "parseIni <file[.ini]> [SECTION] (without SECTION, will list them)" && return 99
local CONFIG_FILE="$1"
local SECTION="$2"

# HOWTO replace non :alnum: :
# perl -ple 's/[^\w\-]/_/g'
# sed -e 's/[^a-z0-9\-]//g'
# echo ${var//[^[:alnum:]-]/_}

[ ! -f "${CONFIG_FILE}" ] && CONFIG_FILE=${CONFIG_FILE}.ini
[ ! -f "${CONFIG_FILE}" ] && ERROR exist ${CONFIG_FILE} 0 && return 2
[ ! -s "${CONFIG_FILE}" ] && ERROR empty ${CONFIG_FILE} 0 && return 3

[ -z "${SECTION}" ] && grep "^\[.*\]" ${CONFIG_FILE} && return 1
grep "^\[${SECTION}\]" ${CONFIG_FILE} >/dev/null || return 2

varsToEval=$(sed -e 's/[[:space:]]*\=[[:space:]]*/=/g' \
  -e 's/;.*$//' \
  -e 's/[[:space:]]*$//' \
  -e 's/^[[:space:]]*//' \
  -e "s/^\(.*\)=\([^\"']*\)$/\1=\"\2\"/" \
  < ${CONFIG_FILE} \
  | sed -n -e "/^\[$SECTION\]/,/^\s*\[/{/^[^;].*\=.*/p;}" \
  | awk -v SECTION=$SECTION '{
    n=split($0, var, "="); key=var[1]; value=""; for ( i=2 ; i<=n ; ++i ) {value=value""var[i];}
    if (!nbKeys[key]) {nbKeys[key]=0;}
    if (!data[key]) {data[key]=value;}
    if (SECTION == "default") {data["default_"key]=value;}
    data["a_"key"["nbKeys[key]"]"]=value;
    nbKeys[key]++;
  }
  END {for (key in data) {printf "%s=%s;",key,data[key]};}' )

$Debug && echo $varsToEval | tr ';' '\n' | sort
eval $varsToEval
}