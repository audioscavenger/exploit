ifc() {
local REMOTE=false
local remoteServer
while getopts :r:R: _OPT 2>/dev/null; do
{
  case ${_OPT} in
    r|R) REMOTE=true; remoteServer="${OPTARG}";;
    *)  local _NOARGS="${_NOARGS}${_NOARGS+, }-${OPTARG}" ;;
  esac
}
done
shift $((OPTIND - 1))
unset _OPT OPTARG OPTIND
# [ "X${_NOARGS}" != "X" ] && ERROR param "${_NOARGS}"

local regexp="$*"
$Debug && printf "_NOARGS=%s, OPTARG=%s, regexp=%s\n" "$_NOARGS" "$regexp" "$OPTARG"

local command='eval ifconfig -a | egrep "inet|RUNNING,|encap:Ethernet" | egrep -vi "inet6|127.*.*.1|LOOPBACK"'
if ${REMOTE}; then
  # $Debug && echo2 "command ${ssh} -qx -l ${remoteUser} -tt ${remoteServer} \"${remoteProfile} ; ifc '${regexp}'\" 2>/dev/null"
  # command ${ssh} -qx -l ${remoteUser} -tt ${remoteServer} "${remoteProfile} >/dev/null 2>&1; ifc '${regexp}'" 2>/dev/null
  $Debug && echo2 "echo \" \${remoteProfile} >/dev/null 2>&1; ifc '${regexp}'\" | command \${ssh} -qx -l \${remoteUser} -T \${remoteServer} /bin/bash"
  echo "${remoteProfile} >/dev/null 2>&1; ifc '${regexp}'" | command ${ssh} -qx -l ${remoteUser} -T ${remoteServer} /bin/bash
else
  ${command} |\
  awk -v regexp="${regexp}" -v startCol=${startCol:-70} -v maxCol=${maxCol:-85} '
  function trim(n) { gsub(/[ \t]+$/, "", n); return n }
  function degradizeAIX(string,sep,bgcolor,fgcolor) {
    while (index(string,",") > 0) {
      sub(sep,sprintf("\033[48;5;%sm\033[38;5;%sm__",bgcolor,fgcolor),string)
      if (bgcolor > 16) {bgcolor-=1}
      if (fgcolor > 233) {fgcolor-=2}
    }
    gsub("__",sep,string); return string
  }
  BEGIN {col=startCol;lastEth=""}
  {
  if ($1 != "inet")
  {
    n=split($1,eth,":")
    if (eth[1] != lastEth) {lastEth=eth[1]
          aix=match($0, "RUNNING,")
          if (aix) {printf "\033[48;5;21m\033[38;5;255m%s\033[0m\n",degradizeAIX($0,",",21,254)}
          else {printf "\033[48;5;54m\033[38;5;105m%s\033[0m\n",$0}
          }
  } else {
    ip=$2;sub("addr:","",ip)
    # http://www.gnu.org/software/gawk/manual/html_node/Getline_002fPipe.html#Getline_002fPipe
    ("host -n "ip" 2>&1")| getline DNS
    if (index(DNS,regexp) == 0) {next}
    if (index(toupper(DNS),"NOT FOUND") != 0) {DNS=ip}
    n=split(DNS,dns," ")
    if (ip == dns[n]) {col1="\033[48;5;52m\033[38;5;196m"} else {col1=sprintf("\033[38;5;%sm",col)}
    printf "%s%15s : %s%s\n",col1,ip,dns[n],"\033[0m"; if (col > maxCol) {col=startCol} else {col+=2}
  }
  }'
fi
}
