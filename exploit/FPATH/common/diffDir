diffDir() {
########
# INIT ###########################################################################
########
local showWhat RESOLV QUIET uniqNames resolvPaths rightDirContent leftDir rightDir
showWhat=all
RESOLV=false
QUIET=false
uniqNames="cat"
resolvPaths="cat"
rightDirContent=/tmp/${FUNCNAME}.$$.tmp

# getopts:
local _NOARGS _OPT
while getopts :mdsur _OPT 2>/dev/null
do
{
  case ${_OPT} in
    m) showWhat=miss ;;
    d) showWhat=diff ;;
    s) showWhat=same ;;
    u) uniqNames="${awk} '/~/ {n=split(\$2,libname,\".\");print libname[1]}'|sort|uniq" ;;  # used for libdir comparison
    r) RESOLV=true ;;
    q) QUIET=true ;;
    *) _NOARGS="${_NOARGS}${_NOARGS+, }-${OPTARG}" ;;
  esac
}
done
shift $((OPTIND - 1))
unset _OPT OPTARG OPTIND
# [ "X${_NOARGS}" != "X" ] && ERROR param "${_NOARGS}"

########
# VERIF ###########################################################################
########
if [ $# -lt 1 -o "X${_NOARGS}" != "X" ]; then
  echo2 "\
${C}${FUNCNAME} ${w}[OPTIONS] ${c}<leftDir> [rightDir:.] ${END}\n\
  -m              show only missing items \n\
  -d              show only differences \n\
  -s              show only identicals \n\
  -r              show full paths \n\
  -q              QUIET (no header/footer) \n\
"
  return 99
fi

leftDir=$(realpath $1)
rightDir=$(realpath ${2:-$PWD})

[ ! -d "${leftDir}" ] && ERROR exist_rep "${leftDir}" 0 && return 1
[ ! -d "${rightDir}" ] && ERROR exist_rep "${rightDir}" 0 && return 1

########
# MAIN ###########################################################################
########
command ls -lq ${rightDir}| ${awk} 'NR>1 {if ($(NF-1) == "->") {printf "%s %s->%s\n",$5,$(NF-2),$NF} else {print $5,$NF}}' | sort -k 2 >${rightDirContent}
command ls -lq ${leftDir}| ${awk} 'NR>1 {if ($(NF-1) == "->") {printf "%s %s->%s\n",$5,$(NF-2),$NF} else {print $5,$NF}}' | sort -k 2 | join -a1 -a2 -1 2 -2 2 -o 1.2,1.1,2.1,2.2 -e 0 - ${rightDirContent} |\
${awk} -v leftDir=${leftDir} -v rightDir=${rightDir} -v showWhat=${showWhat} -v RESOLV=${RESOLV} -v QUIET=${QUIET} '
function commas(d) {
  # http://www.staff.science.uu.nl/~oostr102/docs/nawk/nawk_65.html
  d = d ""
  gsub(",","",d)
  point = index(d,".") - 1
  if (point < 0) point = length(d)
  while (point > 3) {
    point -= 3
    d = substr(d,1,point)","substr(d,point + 1)
  }
  return d
}
BEGIN {i=1;leftWidth=20;rightWidth=20;totalSizeLeft=0;totalSizeRight=0;sep="----------------------------------------------------------------"}
{
leftColor[i]="{w}";sign[i]="="
if ($2==$3) {if (showWhat!="all" && showWhat!="same") {next} else {leftColor[i]="{g8}"}} else {leftColor[i]="{y}";sign[i]="~"}
if ($1 ~ "->") {leftColor[i]="{c}"}
leftName[i]=$1;leftSize[i]=$2;rightSize[i]=$3;rightName[i]=$4
middleColor[i]=leftColor[i]
if (leftName[i]=="0") {leftSize[i]="";leftName[i]="";middleColor[i]="{w}";sign[i]="#"} else {totalLeft++;totalSizeLeft+=leftSize[i]}
if (rightName[i]=="0") {rightSize[i]="";rightName[i]="";leftColor[i]=middleColor[i]="{w}";sign[i]="#"} else {totalRight++;totalSizeRight+=rightSize[i]}
if (showWhat=="same" && sign[i]!="=") {next}
if (showWhat=="miss" && sign[i]!="#") {next}
if (showWhat=="diff" && sign[i]=="=") {next}
if (length($1) > leftWidth) {leftWidth=length($1)}
if (length($4) > rightWidth) {rightWidth=length($4)}
if (leftName[i] ~ "->") {middleColor[i]="{c}"}
i++
}
END {
if (i==1) {print "identical"} else {
  if (QUIET=="false") {
    printf "%s %."leftWidth"s %.14s : %.14s %."rightWidth"s\n","{c}",sep,sep,sep,sep
    printf "%s %"leftWidth"s/ %14s : %14s %-"rightWidth"s/\n","{c}",leftDir,"","",rightDir
  }
  if (RESOLV=="true") {
    for (n=1; n<i; n++) {printf "%s %s/%-"leftWidth"s %s/%-"rightWidth"s\n",leftColor[n],leftDir,leftName[n],rightDir,rightName[n]}
    } else {
    for (n=1; n<i; n++) {printf "%s %"leftWidth"s %14s %s%s %-14s %-"rightWidth"s\n",leftColor[n],leftName[n],commas(leftSize[n]),middleColor[n],sign[n],commas(rightSize[n]),rightName[n]}
  }
  if (QUIET=="false") {
    printf "%s %."leftWidth"s %.14s : %.14s %."rightWidth"s\n","{w}",sep,sep,sep,sep
    printf "%s %"leftWidth"s %14s : %-14s %-"rightWidth"s{END}\n","{w}","total : "totalLeft,commas(totalSizeLeft),commas(totalSizeRight),totalRight
  }
}
}' |\
${COLORIZE} ${LOWS} |\
eval ${uniqNames}

rm -f ${rightDirContent}
}
