was_checkVersions() {
#@(t)  |UNAME |out|mod|set|sys|net|app|mis| description                                                                                        |
#@(p)  |*     | x |   |   |   |   | x |   | print detected local Websphere ND versions of every IDT along with Java versions                   |
[ -z "${wasVersion}" ] && ERROR var wasVersion 0 && return 99
local FULL PRODUCT PRODUCTS IHSName IHSNames IHSNameFromParams what Java FixDate Info CD ERROR JavaVersion
local TMP LOG LOGG
FULL=false
Java=""
parallelJobs=${parallelJobs:-12}
ERROR=false
what=all

[ "x$1" == "x-h" ] && ERROR=true && shift
[ "x$1" == "x-d" ] && Debug=true && shift
[ "x$1" == "x-f" ] && FULL=true && shift
(( $# > 0 )) && PRODUCTS=$1
(( $# > 1 )) && IHSNameFromParams=$2
(( $# > 2 )) && what=$3

case "x${what}" in
xcd)           true ;;
xarchi*)       true ;;
xjava)         FULL=true ;;
xjavaver*)     FULL=true ;;
xdate*)        FULL=true ;;
xver*)         true ;;
xdir*)         true ;;
xall)          true ;;
*)             ERROR=true ;;
esac

[ "${PRODUCTS:-all}" == "all" ] && PRODUCTS=${wasCoreName[@]}
(( $# > 0 )) && for PRODUCT in ${PRODUCTS}; do ! (echo ${wasCoreName[@]} | grep -q $PRODUCT) && ERROR=true; done
$ERROR && echo2 "syntax: ${C}${FUNCNAME}${c} [-f] [\"${wasCoreName[@]} (all*)\"] [\"IHSName .. | all\"] [cd|archi|java|javaver|ver|date|dir] ${K}(multiple PRODUCTS/IHSName possible if double quoted)" && return 99

[ "${UNAME}" == "AIX" ] && [ "${LOGNAME}" == "root" ] && [ ! -h "/opt/freeware/bin/perl" ] && ln -s /usr/bin/perl /opt/freeware/bin/perl

$Debug && echo2 "${m}Debug=$Debug PRODUCTS=$PRODUCTS FULL=$FULL what=$what IHSNameFromParams=$IHSNameFromParams ERROR=$ERROR${END}"
$FULL && Java=Java && JavaVersion=JavaVersion && FixDate=FixDate
(( $# < 3 )) && printf ${SMUL}"%-14s %-5s %-5s %-5s %-11s %-9s %10s %s${END}:\n" hostName CD Archi "$Java" "$JavaVersion" Version "$FixDate" wasPath

#INFO: BUG: gnu parallel 20130822 cannot access exported associative arrays !!!!
# => these arrays won't be accessible by was_checkVersion: wasCoreFixName wasCoreIdName wasCoreLogName wasCoreLongName
# http://stackoverflow.com/questions/25158583/exporting-the-full-environment-to-gnu-parallel
# http://stackoverflow.com/questions/24977782/accessing-associative-arrays-in-gnu-parallel
$Debug && echo2 "${m}echo2 ${PRODUCTS} | parallel --no-notice --gnu --jobs ${parallelJobs} \"was_checkVersion {} $FULL ${what}\"${END}"
$Debug && (echo2 ${PRODUCTS} | tr ' ' '\n' | parallel --no-notice --gnu --jobs ${parallelJobs} --keep-order "echo was_checkVersion {} $FULL ${what}")
echo ${PRODUCTS} | tr ' ' '\n' | parallel --no-notice --gnu --jobs ${parallelJobs} --keep-order "was_checkVersion {} $FULL ${what}"

################### special APRIA: ####################
[ ${ENTITY} != "APRIA" ] && return 0
PRODUCTS=$(echo ${PRODUCTS} | sed -e "s/WAS//g" -e "s/UPD//g")
echo ${PRODUCTS} | egrep -q "IHS|PLG" && cd ${wasIHSRoot} 2>/dev/null || return 0
[ -s "./bin/apachectl" ] && return 0
IHSNames=${IHSNameFromParams:-$(lsdir 2>/dev/null | tr '\n' ' ')}
cd - >/dev/null 2>&1
#######################################################

$Debug && echo2 "${m}Debug=$Debug PRODUCTS=$PRODUCTS FULL=$FULL what=$what IHSName=$IHSNames ERROR=$ERROR${END}"
$Debug && parallel --no-notice --gnu --jobs ${parallelJobs} --keep-order "echo2 was_checkVersion {1} $FULL ${what} {2}" ::: ${PRODUCTS} ::: $IHSNames
parallel --no-notice --gnu --jobs ${parallelJobs} --keep-order "was_checkVersion {1} $FULL ${what} {2}" ::: ${PRODUCTS} ::: $IHSNames
#------------------------------------------------------

return 0
}
