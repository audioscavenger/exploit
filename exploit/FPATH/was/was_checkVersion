was_checkVersion() {
#@(t)  |UNAME |out|mod|set|sys|net|app|mis| description                                                                                        |
#@(p)  |*     | x |   |   |   |   | x |   | print Websphere ND IDT versions and Java versions, called by was_checkVersions                     |
[ -z "${wasVersion}" ] && ERROR var wasVersion 0 && return 99
local PRODUCT FULL what COL rootDir Archi CD Java versionInfoScript versionProductFile versionFixFile ERROR JavaVersion SR versionInfoOutput Version fixInstallDate Dir
local TMP LOG LOGG

PRODUCT=$1
FULL=$2
what=${3:-all}
IHSName=$4
ERROR=false

#INFO: when launched by parallel, FUNCNAME is NOT set by bash 3.x, you keep the caller name instead!
TMP=$(mktemp was_checkVersion.XXXXX)

case "x${what}" in
xcd)            COL=2 ;;
xarchi*)        COL=3 ;;
xjava)          FULL=true && COL=5 ;;
xjavaver*)      FULL=true && COL=6 ;;
xdate*)         FULL=true && COL=7 ;;
xver*)          $FULL && COL=6 || COL=4 ;;
xdir*)          $FULL && COL=8 || COL=5 ;;
xall)           COL=0 ;;
*)              ERROR=true ;;
esac

[ "$FULL" != "true" -a "$FULL" != "false" ] && ERROR param "$FULL" 0 && ERROR=true
$Debug && echo2 "${m}Debug=$Debug PRODUCT=$PRODUCT FULL=$FULL what=$what IHSName=$IHSName ERROR=$ERROR${END}"
( (($# < 2)) || $ERROR ) && echo2 "syntax: ${C}was_checkVersion ${c}<UPD|WAS|IHS|PLG> <FULLextract=true|false> [cd|archi|java|javaver|ver|date|dir|all*] [IHSName] ${K}${END}" >&2 && return 99

eval wasCoreLongName=${wasCoreLongName2eval}
eval wasCoreIdName=${wasCoreIdName2eval}
eval wasCoreFixName=${wasCoreFixName2eval}
eval wasCoreLogName=${wasCoreLogName2eval}

rootDir=$(eval echo \${was${PRODUCT}Root})
versionInfoScript=${rootDir}/bin/versionInfo.sh
versionProductFile=${rootDir}/properties/version/${PRODUCT}*.product
versionFixFile=${rootDir}/properties/version/${wasCoreFixName[${PRODUCT}]}.${WAS_VERSION%\.*}.fxtag
uninstallFile=${rootDir}/uninstall/version.txt

#INFO: build-info is the build of the fixpak, not the one of the install !
# cat ${versionProductFile}
# <?xml version="1.0" encoding="UTF-8"?>
# <!DOCTYPE product SYSTEM "product.dtd">
# <product name="IBM HTTP Server">
  # <id>IHS</id>
  # <version>7.0.0.33</version>
  # <build-info
    # date="5/28/14"
    # level="cf331421.01"/>
# </product>

#INFO: no versionFixFile for UPDI !!
# cat ${versionFixFile}
# <Fix>
        # <Type>Service Release</Type>
        # <FixName>WebSphere IBM HTTP Server v7.0.0 Fix Pack 33 for Aix, PPC64</FixName>
        # <FixVersion>7.0.0.33</FixVersion>
        # <FixID>7.0.0-WS-IHS-AixPPC64-FP0000033</FixID>
        # <SWGFMIDX>HWASP700</SWGFMIDX>
# </Fix>

#------------------------------------------------------------------------------------------------
#INFO: APRIA special trick: sometimes u find multiple copies of IHS+PLG binaries... yeah yeah !!!
[ "${PRODUCT}" == "IHS" -a -n "${IHSName}" -a "${IHSName}" != "root" ] && versionInfoScript=${wasIHSRoot}/${IHSName}/bin/versionInfo.sh && uninstallFile=${wasIHSRoot}/${IHSName}/uninstall/version.txt
[ "${PRODUCT}" == "PLG" -a -n "${IHSName}" -a "${IHSName}" != "root" ] && versionInfoScript=${wasIHSRoot}/${IHSName}/Plugins/bin/versionInfo.sh && uninstallFile=${wasIHSRoot}/${IHSName}/Plugins/uninstall/version.txt
#------------------------------------------------------------------------------------------------

[ ! -x "${versionInfoScript}" ] && return 0
versionInfoOutput=$(${versionInfoScript} 2>&1 | egrep -w "Product Directory|Version|Architecture" | command grep -v "Version Directory" | awk '{print $NF}' | command sort -r | command xargs -n3)
# versionInfoOutput="PPC64 7.0.0.27 /usr2/produits/websphere7/AppServer"
Archi=${versionInfoOutput%% *}
Dir=${versionInfoOutput##* }
Version=$(echo ${versionInfoOutput} | awk '{print $2}')

if $FULL; then
  ${rootDir}/java/jre/bin/java -version >${TMP} 2>&1 
  # java version "1.6.0"
  # Java(TM) SE Runtime Environment (build pap6460sr2-20080818_01(SR2))
  # Java(TM) SE Runtime Environment (build pap6460sr9fp1ifix-20110401_01(SR9 FP1+IZ95392+IZ95393+IZ97453))
  command grep -qi ppc64 ${TMP} && Java=PPC64 || Java=PPC32
  JavaVersion=$(awk '/java version/ {print $NF}' ${TMP} | tr -d '"')
  SR=$(command grep "Java(TM)" ${TMP} | command grep -o "(SR.." | tr -d '()' )
  fixInstallDate=$(command ls --time-style="+%Y-%m-%d %H:%M:%S" -l $([ "${PRODUCT}" == "UPD" ] && echo ${versionProductFile} || echo ${versionFixFile}) | awk '{print $6}')
fi

[ -s "${uninstallFile}" ] && CD=$(command grep -qi ppc64 ${uninstallFile} && echo PPC64 || echo PPC32) || CD=ERROR
printf "%-14s %-5s %-5s %-5s %-11s %-9s %10s %s\n" $HOSTNAME $CD $Archi "$Java" "${JavaVersion}${JavaVersion:+_}${SR}" ${Version} "${fixInstallDate}" ${Dir} | awk -v COL=$COL '{print $COL}'
$Debug && echo2 TMP=${TMP} || rm -f ${TMP}
}
