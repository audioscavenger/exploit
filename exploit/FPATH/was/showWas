showWas() {
#@(t)  |UNAME |out|mod|set|sys|net|app|mis| description                                                                                        |
#@(p)  |*     | x |   |   |   |   | x |   | shows launched WAS AppServers and some memory stats                                                |
[ "${Echo}" == "NOEcho" ] && return 0
local _SVMONN Inuse Pin Pgsp Virtual color what2grep grepCommand user pid ppid nbThreads threads colon ETIME realProcess cellName nodeName serverName CONFIG_ROOT
color=${g}

if (( $# )); then
  what2grep="$*"
  grepCommand="egrep ${what2grep// /|}"
else
  _SVMONN=$(${print} "%8s %4s %7s %7s %7s %7s" pid CMD Inuse Pin Pgsp Virtual)
  [ "${UNAME}" == "AIX" ] && $Echo ${w} WAS_SERVER "user       Cell" "${_SVMONN} /        NODE        /       WAS_SERVER"
  [ "${UNAME}" == "Linux" ] && $Echo ${w} WAS_SERVER "user       Cell" "PID          NODE     /   WAS_SERVER"
fi

# root       9044030         1     +1  threads :  86-17:00:23 java prd-unx-jee001Cell01 prd-unx-jee004       nodeagent
wasps -cl | ${DECOLORIZE} |\
while read user pid ppid nbThreads threads colon ETIME realProcess cellName nodeName serverName CONFIG_ROOT; do
  # ETIME="$(${print} "%12s" $ETIME)"
  
  _SVMONN=$(${print} "%8s %4s %7s %7s %7s %7s" $(svmonn ${pid} | tail -1))
  case "${serverName}" in
  dmgr)       colorCode=yy ;;
  nodeagent)  colorCode=nn ;;
  *)          colorCode=gg ;;
  esac
  
  Inuse=$(echo ${_SVMONN} | ${awk} '{printf "%d",$3}')
  eval color=\${${colorCode}[0]}
  (( Inuse > 256 )) && eval color="\${${colorCode}[1]}"
  (( Inuse > 512 )) && eval color="\${${colorCode}[2]}"
  (( Inuse > 1024 )) && eval color="\${${colorCode}[3]}"
  (( Inuse > 1512 )) && eval color="\${${colorCode}[4]}"
  
  $Echo ${color} "was $(getWasVersion ${CONFIG_ROOT})" "$user ${cellName}" "${_SVMONN} ${nodeName} / ${serverName} " START
done | ${grepCommand:-/bin/cat} && return 0
# this way, u get bash errors when launching a new shell:
# done< <(wasps -l | ${DECOLORIZE})
}
