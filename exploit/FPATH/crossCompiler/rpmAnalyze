rpmAnalyze() {
! (($#)) 2>/dev/null && echo2 "${C}${FUNCNAME}${c} <binary1 .. |rpm> [depth]${END}" && return 99
local fileExt file files depth currDepth libraries library Debug
currDepth=0
depth=0
Debug=false

[ "x$1" == "x-x" ] && Debug=true && shift
# INFO: bash only way to last argument:
# depth="${@: -1}"
# depth="${!#}"
# INFO: portable way to get last argument:
for depth; do true; done
if ((depth + 666)) 2>/dev/null; then
  (($# > 1)) 2>/dev/null && files="${@:1:($#-1)}" || files="$1"
else
  files="$@"
fi
# rpm analyze requires only one rpm
(($# == 1)) 2>/dev/null && fileExt=${file##*\.} || :

case "$fileExt" in
rpm|RPM)
  true
;;
*)
  for file in $files; do
    [ ! -f "$file" ] && libraries="$libraries $file" && continue
    $Debug && echo2 "${g12}processing $file...${END}"
    libraries="$(rpm -q --whatprovides $(ldd $file 2>/dev/null | ${awk} 'NR>1 {sub(/[\(].+$/, ""); print $1}' | sort | uniq) 2>/dev/null) $libraries"
  done
  libraries=$(printf "%s\n" $(rpm -q $libraries 2>/dev/null) | sort | uniq)
  echo "${W}level ${currDepth}${w}:"
  printf "%s\n" $libraries

  while ((currDepth < depth)) 2>/dev/null; do
    libraries=$(rpm -q --requires $libraries 2>/dev/null | ${awk} '{sub(/[\(].+$/, ""); print $1}' | sort | uniq)
    let currDepth+=1
    echo -e "\n${W}level ${currDepth}${w}:"
    printf "%s\n" $(rpm -q $libraries 2>/dev/null)
  done
;;
esac
}
