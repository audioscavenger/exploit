raidOptimize() {
# https://ubuntuforums.org/showthread.php?t=1494846
# NEED FOLLOWING UTILS
# -- hdparm
# -- lvm

# Add VM tuning stuff?
#vm.swappiness = 1               # set low to limit swapping
#vm.vfs_cache_pressure = 50      # set lower to cache more inodes / dir entries
#vm.dirty_background_ratio = 5   # set low on systems with lots of memory
                                 # Too HIGH on systems with lots of memory 
                                 # means huge page flushes which will hurt IO performance
#vm.dirty_ratio = 10             # set low on systems with lots of memory

# DEFAULTS
local BLOCKSIZE=4        # of filesystem in KB (should I determine?)
local FORCECHUNKSIZE=true    # force max  sectors KB to chunk size > 512
local TUNEFS=true        # run tune2fs on filesystem if ext[3|4]
local SCHEDULER=deadline      # cfq / noop / anticipatory / deadline  https://cromwell-intl.com/open-source/performance-tuning/disks.html
local NR_REQUESTS=64          # NR REQUESTS
local NCQDEPTH=31             # NCQ DEPTH
local MDSPEEDLIMIT=200000     # Array speed_limit_max in KB/s

local ARRAY
local RAIDLEVEL=0
local NDEVICES=0
local CHUNKSIZE=0
local ARRAYSTATUS=0
local DISKS=""
local SPARES=""
local NUMDISKS=0
local NUMSPARES=0
local NUMPARITY=0
local NCQ=0
local NUMNCQDISKS=0

local RASIZE=0
local MDRASIZE=0
local STRIPECACHESIZE=0
local MINMAXHWSECKB=999999999

local STRIDE=0
local STRIPEWIDTH=0

# ----------------------------------------------------------------------
# BODY
# ----------------------------------------------------------------------

# mdadm -Esv | grep ARRAY | while read x1 x2 x3 x4 x5
# determine list of arrays; for some reason this command on Thecus N5550 do not return the correct array name:
# ARRAY /dev/md/10 level=raid1 metadata=1.2 num-devices=5 UUID=7d44de8b:85c81efc:c5c080df:84a56283 name=N5550:10
#    devices=/dev/sda1,/dev/sde1,/dev/sdd1,/dev/sdc1,/dev/sdb1
# ARRAY /dev/md/1 level=raid5 metadata=1.2 num-devices=5 UUID=0d2ce1ff:9ebf1930:906615df:1f3659db name=N5550:1
#    devices=/dev/sda2,/dev/sde2,/dev/sdd2,/dev/sdc2,/dev/sdb2
# ARRAY /dev/md/51 level=raid1 metadata=1.2 num-devices=3 UUID=5c622976:2a837553:d1099ec0:daad708b name=N5550:51
#    spares=2   devices=/dev/sda3,/dev/sde3,/dev/sdd3,/dev/sdc3,/dev/sdb3

grep "active raid" /proc/mdstat | while read x1 x2 x3 x4 x5; do
  # INIT VARIABLES
  RAIDLEVEL=0
  NDEVICES=0
  CHUNKSIZE=0
  ARRAYSTATUS=0
  DISKS=""
  SPARES=""
  NUMDISKS=0
  NUMSPARES=0
  NUMPARITY=0
  NCQ=0
  NUMNCQDISKS=0

  RASIZE=0
  MDRASIZE=0
  STRIPECACHESIZE=0
  MINMAXHWSECKB=999999999

  STRIDE=0
  STRIPEWIDTH=0


  # GET DETAILS OF ARRAY
  # ARRAY=`basename $x2`
  ARRAY=`basename $x1`
  # RAIDLEVEL=`echo $x3 | cut -d'=' -f2`
  RAIDLEVEL=`echo $x4`

  case $RAIDLEVEL in
  "raid6") NUMPARITY=2 ;;
  "raid5") NUMPARITY=1 ;;
  "raid4") NUMPARITY=1 ;;
  "raid3") NUMPARITY=1 ;;
  "raid1") NUMPARITY=1 ;;
  "raid0") NUMPARITY=0 ;;
  *) 
      echo "Unknown RAID level"
  esac

  echo ""
  echo "======================================================================"
  echo "FOUND ARRAY - $ARRAY / $RAIDLEVEL"
  
  CHUNKSIZE=`mdadm --detail /dev/$ARRAY | grep 'Chunk Size' | tr -d A-Za-z':'[:blank:]`
  echo "-- Chunk Size = $CHUNKSIZE KB"

  FOO1=`grep "$ARRAY : " /proc/mdstat`
  ARRAYSTATUS=`echo $FOO1 | cut -f 3 -d\ `

  # GET LIST OF DISKS IN ARRAY
  echo ""
  echo "Getting active devices and spares list"
  for DISK in `echo $FOO1 | cut -f 5- -d \ `; do
    LETTER=`echo $DISK | cut -c 1-3`
    echo $DISK | grep '(S)'
        RC=$?
    if [ $RC -gt 0 ]
    then
        echo "-- $DISK - Active"
        DISKS="$DISKS $LETTER"
        NUMDISKS=$((NUMDISKS+1))
    else
        echo "-- $DISK - Spare"
        SPARES="$SPARES $LETTER"
        NUMSPARES=$((NUMDISKS+1))
    fi
  done
  echo ""
  echo "Active Disks ($NUMDISKS) - $DISKS"
  echo "Spares Disks ($NUMSPARES) - $SPARES"

  # DETERMINE SETTINGS
  RASIZE=$(($NUMDISKS*($NUMDISKS-$NUMPARITY)*2*$CHUNKSIZE))  # Disk read ahead in 512byte blocks
  MDRASIZE=$(($RASIZE*$NUMDISKS))                            # Array read ahead in 512byte blocks
  STRIPECACHESIZE=$(($RASIZE*2/8))                           # in pages per device


  for DISK in $DISKS $SPARES; do
    # check max_hw_sectors_kb
    FOO1=`cat /sys/block/$DISK/queue/max_hw_sectors_kb | awk '{print $1}'`
    if [ $FOO1 -lt $MINMAXHWSECKB ]
    then
        MINMAXHWSECKB=$FOO1
    fi

    # check NCQ
    # hdparm -I /dev/$DISK | grep NCQ >> /dev/null
    # must have a star to tell it's Enabled
    hdparm -I /dev/$DISK | grep NCQ | grep \* >> /dev/null
    if [ $? -eq 0 ]
    then
        NUMNCQDISKS=$((NUMNCQDISKS+1))
    fi
  done

  if [ $CHUNKSIZE -le $MINMAXHWSECKB ]
  then
  MINMAXHWSECKB=$CHUNKSIZE
  fi

  if [ $NUMNCQDISKS -lt $NUMDISKS ]
  then
    NCQDEPTH=1
    echo "WARNING! ONLY $NUMNCQDISKS DISKS ARE NCQ CAPABLE!"
  fi

  echo ""
  echo "TUNED SETTINGS"
  echo "-- DISK READ AHEAD  = $RASIZE blocks"
  echo "-- ARRAY READ AHEAD = $MDRASIZE blocks"
  echo "-- STRIPE CACHE     = $STRIPECACHESIZE pages"
  echo "-- MAX SECTORS KB   = $MINMAXHWSECKB KB"
  echo "-- NCQ DEPTH        = $NCQDEPTH"

  # TUNE ARRAY
  echo ""
  echo "TUNING ARRAY"
  blockdev --setra $MDRASIZE /dev/$ARRAY
  echo "-- $ARRAY read ahead set to $MDRASIZE blocks"

  echo "$STRIPECACHESIZE" > /sys/block/$ARRAY/md/stripe_cache_size
  echo "-- $ARRAY stripe_cache_size set to $STRIPECACHESIZE pages"

  echo $MDSPEEDLIMIT > /proc/sys/dev/raid/speed_limit_max
  echo "-- $ARRAY speed_limit_max set to $MDSPEEDLIMIT"

  # TUNE DISKS
  echo ""
  echo "TUNING READY FOR DISKS: $DISKS $SPARES"
  echo "Settings : param   = new value      - current values"
  echo "        read ahead = $RASIZE blocks - $(for DISK in $DISKS $SPARES; do blockdev --getra /dev/$DISK|tr -d '\n';echo -n ' '; done)"
  echo "    max_sectors_kb = $MINMAXHWSECKB KB - $(for DISK in $DISKS $SPARES; do cat /sys/block/$DISK/queue/max_sectors_kb|tr -d '\n';echo -n ' '; done)"
  echo "         scheduler = $SCHEDULER - $(for DISK in $DISKS $SPARES; do cat /sys/block/$DISK/queue/scheduler|tr -d '\n';echo -n ' '; done)"
  echo "       nr_requests = $NR_REQUESTS - $(for DISK in $DISKS $SPARES; do cat /sys/block/$DISK/queue/nr_requests|tr -d '\n';echo -n ' '; done)"
  echo "       queue_depth = $NCQDEPTH - $(for DISK in $DISKS $SPARES; do cat /sys/block/$DISK/device/queue_depth|tr -d '\n';echo -n ' '; done)"

  
  # blockdev --report /dev/sda
  # RO    RA   SSZ   BSZ   StartSec            Size   Device
  # rw     0   512  4096          0   2000398934016   /dev/sda
  echo -n "apply? (N/y) "
  read apply </dev/tty
  if [ "$apply" -eq "y" ]; then
    for DISK in $DISKS $SPARES; do
      echo "-- Tuning $DISK"
      # blockdev --setra $RASIZE /dev/$DISK
      # echo $MINMAXHWSECKB > /sys/block/$DISK/queue/max_sectors_kb
      # echo $SCHEDULER > /sys/block/$DISK/queue/scheduler
      # echo $NR_REQUESTS > /sys/block/$DISK/queue/nr_requests
      # echo $NCQDEPTH > /sys/block/$DISK/device/queue_depth
    done
  fi

  # TUNE ext3/exti4 FILESYSTEMS
  # tune2fs -l /dev/md0
  
  STRIDE=$(($CHUNKSIZE/$BLOCKSIZE))
  STRIPEWIDTH=$(($CHUNKSIZE/$BLOCKSIZE*($NUMDISKS-$NUMPARITY)))
  echo ""
  echo "TUNING FILESYSTEMS"
  echo "For each filesystem on this array, run the following command:"
  echo "tune2fs -E stride=$STRIDE,stripe-width=$STRIPEWIDTH <fs>"
  df | grep ^/dev/$ARRAY | awk '!/nfs|NFS/ {print $NF}' | while read fs; do
    echo "tune2fs -E stride=$STRIDE,stripe-width=$STRIPEWIDTH $fs"
  done
  echo ""
done
}
