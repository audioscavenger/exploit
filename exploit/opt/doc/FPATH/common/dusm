dusm() {
# http://awk.info/?tip/getline
local TMP Used FS
TMP=$(mktemp)
read Used FS <<<$(df -Pm . | tail -1 | awk '{print $3,$NF}')

ls -aq |\
awk -v Used=${Used} -v FS="${FS}" '
  BEGIN {c="{c}"; w="{w}"; N="{g3}"; i=1;}
  NR>2 {
    file=$0;
    while (("df "file| getline ) >0) {
      if (!/Mounted/) {
        f=split($0,a_fs," ");
        if (("du -sm "file| getline du) >0) {d=split(du,a_du," ");}
        if (FS == a_fs[f]) {COLOR=w; pct=sprintf("%.0f",a_du[1]*100/Used);} else {COLOR=c; pct="-1";}
        if (pct > 100) {COLOR=c; pct="-1";}
        if (pct == 0) {COLOR=N;}
        print COLOR,sprintf("%.0f",a_du[1]),pct,a_du[2];
      }
    }
  }' |\
sort -n -k3 -k2 -k4 >${TMP}

export _dusmcd=$(tail -1 ${TMP} | awk '{print $NF}')
awk -v Used=${Used} '
  function commas(d) {
      # http://www.staff.science.uu.nl/~oostr102/docs/nawk/nawk_65.html
      d = d ""; gsub(",","",d); point = index(d,".") - 1;
      if (point < 0) point = length(d);
      while (point > 3) { point -= 3; d = substr(d,1,point)","substr(d,point + 1); }
      return d;
    }
  BEGIN {sizeTotal=0;}
  {
    if ($1 == "{w}") sizeTotal+=$2;
    printf "%s %12s %3s%% %s\n",$1,commas($2),$3,$4
  }
  END {printf " ------------ ---- ------------\n %12s %3s%% / %s MB{END}\n",commas(sizeTotal),sprintf("%.0f",sizeTotal*100/Used),commas(sprintf("%.0f",Used))
}' ${TMP} |\
${COLORIZE} ${LOWS}

rm -f ${TMP}
}
