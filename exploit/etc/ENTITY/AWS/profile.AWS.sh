#!/bin/bash
# ! [ "${BASH_VERSION}" ] && return 99  # one day or another this profile will refuse KSH and forever
# BASENAME=$(basename $0)
# DIRNAME=$([ -s "./$0" ] && pwd || dirname $0)
# SCRIPT=${BASENAME%\.*}
(set -o | grep allexport | grep on >/dev/null) && allexport=true || allexport=false
set -a
# echo load AWS

############################################################## profile ########################################################################
ENTITY=AWS
Debug=false
Verbose=false
SCREENRC=${DIREXPLOIT}/etc/ENTITY/${ENTITY}/screenrc
TMUXRC=${DIREXPLOIT}/etc/ENTITY/${ENTITY}/tmuxrc
alias ethpstart='ethproxy --wallet 108b34a0d40DEF933167c9A288FCd347F4a6aa9b'
alias ethpstop='killall ethproxy'


############################################################## common ########################################################################
remoteDIREXPLOIT="~/exploit"
srvList=${DIREXPLOIT}/etc/ENTITY/${ENTITY}/matrice.servers.list.txt
ipList=${DIREXPLOIT}/etc/ENTITY/${ENTITY}/matrice.IP.list.txt
parallelJobs=4
pingTimeout=1
sshTimeout=2
masters="N5550"
remoteUser=root
remoteProfile=" . ${DIREXPLOIT}/profile.sh >/dev/null 2>&1 "
remoteProfileLight=" export FPATH=${FPATH}; export PATH=$PATH; setDate; setColors "
ssh=${ssh:-'ssh -A -o PreferredAuthentications=publickey -o StrictHostKeyChecking=no -o ServerAliveInterval=100'}
remoteSSH="command ${ssh} -o PreferredAuthentications=publickey -o ConnectTimeout=${sshTimeout} -qx -l ${remoteUser} -T"
commandSSH="command ${ssh} -qx -T"
productDir=/raid/data/module
mainRepoDir=/usr2/datas/export_lecture/stdpackages
repoDir=/usr2/stdpackages
instancesRootDir=/raid/data/share/webs
defaultPassword="apriarsa"
defaultDomain="derewonko.com"
defaultORG="N5550"
defaultLOC="PARIS"
defaultST="IDF"
defaultCO="FR"
defaultKeyalg=rsa
defaultKeysize=2048

LANGUAGE="en_US"
LANGUAGE_TYPE="utf|8859"
#TZ="Europe/Paris"
LC_ALL=en_US.UTF-8

# PROXY_ENTITY="192.168.0.100:3128"
# srcIP_default="192.168.0.*"
no_proxy=".local,.localdomain,proxy,localhost,127.0.0.1,localaddress,.localdomain.com,192.168.*,.derewonko.com"
default_proxy_user=""
default_proxy_password=""
WGETRC=${DIREXPLOIT}/etc/wgetrc

httpConfd=/etc/apache2/conf-enabled
httpHtml=/data/www/html
httpLogs=/var/log/apache2
nginxLogs=/var/log/nginx

urlLatestDb=www.it-cooking.com/wp-content/aiowps_backups/database-latest.php
mysqlCnfDir=${DIREXPLOIT}/etc/ENTITY/${ENTITY}
mysqldPort=3306

declare -a vhost
vhost[1]=${httpConfd}/derewonko-vhost-cv.CONF
vhost[2]=${httpConfd}/derewonko-vhost-blog-staging.CONF
vhost[3]=${httpConfd}/derewonko-vhost-blog-prod.CONF

############################################################## functions ########################################################################

############################################################## PLI ########################################################################
pathmunge /usr/local/bin after
INSTANCEID=i-0af6636b9ffc0121d
AMIID=


############################################################## functions ########################################################################
function switchVhost() {
(( $# < 1 )) && echo2 "usage: switchVhost <cv|staging|prod>" && return 99
case $1 in
  cv)       pushd ${httpConfd}; ln -sf $(basename ${vhost[1]}) derewonko-vhost.conf; popd;;
  staging)  pushd ${httpConfd}; ln -sf $(basename ${vhost[2]}) derewonko-vhost.conf; popd;;
  prod)     pushd ${httpConfd}; ln -sf $(basename ${vhost[3]}) derewonko-vhost.conf; popd;;
  *)        echo2 "usage: switchVhost <cv|staging|prod>" && return 99;;
esac

htrestart
htcheck
}

function resetPerm() {
sudo chown -R www-data:www-data /data/www

sudo chmod 755 /data/www/html/blog-*/
sudo chmod 755 /data/www/html/blog-*/wp-includes
sudo chmod 644 /data/www/html/blog-*/.htaccess
sudo chmod 644 /data/www/html/blog-*/wp-admin/index.php
sudo chmod 755 /data/www/html/blog-*/wp-admin/js/
sudo chmod 755 /data/www/html/blog-*/wp-content/themes
sudo chmod 755 /data/www/html/blog-*/wp-content/plugins
sudo chmod 755 /data/www/html/blog-*/wp-admin
sudo chmod 755 /data/www/html/blog-*/wp-content
sudo chmod 644 /data/www/html/blog-*/wp-config.php

sudo chmod u+s,g+s /data/www && find /data/www -type d -exec sudo chmod u+s,g+s {} \;
}

function importDb() {
(( $# < 2 )) && echo2 "usage: importDb <blog> <staging|prod>" && return 99
db=$1
stack=$2
# db=blog
# stack=staging

wget -qN --directory-prefix ${httpHtml}/uploads/ ${urlLatestDb}
$Echo ${y} importDb "wget" "$(ls ${httpHtml}/uploads/database-backup-*.zip)" DONE

unzip -o ${httpHtml}/uploads/database-backup-*.zip -d ${httpHtml}/uploads/
#ERROR 1366 (22007) at line 27674: Incorrect string value: '\xF0\x9F\x98\x89" ...' for column 'option_value' at row 1 ==> SET NAMES utf8;/SET NAMES utf8mb4;
sed -e "s/SET NAMES utf8;/SET NAMES utf8mb4;/g" \
    -e "s/\`wp_/\`${stack}_/g" \
    -e "s/blog\.derewonko/blog-${stack}\.derewonko/g" \
    -e "s#\.com/lepressoir#\.com#g" \
    -e "s#/hermes/bosnacweb02/bosnacweb02ak/b2024/ipg.audioscavenger/lepressoir#${httpHtml}/blog-staging#g" \
    -e "s#\\\\\\\/hermes\\\\\\\/bosnacweb02\\\\\\\/bosnacweb02ak\\\\\\\/b2024\\\\\\\/ipg.audioscavenger\\\\\\\/lepressoir#${httpHtml//\\\\\//\/}/blog-staging#g" \
    ${httpHtml}/uploads/database-backup-*.sql >${httpHtml}/uploads/database-${db}-${stack}.sql
[ ! -s ${httpHtml}/uploads/database-${db}-${stack}.sql ] && $Echo ${r} importDb "Replacements" "${httpHtml}/uploads/database-${db}-${stack}.sql" KO && return 1 || $Echo ${y} importDb "Replacements" "${httpHtml}/uploads/database-${db}-${stack}.sql" DONE

# mysql_config_editor set --login-path=${mysqlCnfDir}/.${db}-${stack}.cnf --host=localhost --user=${db}-${stack} --port=${mysqldPort} --password
mysql --defaults-file=${mysqlCnfDir}/.${db}-${stack}.cnf ${db}-${stack} < ${httpHtml}/uploads/database-${db}-${stack}.sql
(( $? == 0 )) && rm ${httpHtml}/uploads/database-backup-*.*
$Echo ${g} importDb "Import" "${httpHtml}/uploads/database-${db}-${stack}.sql" DONE
# update meta_key
mysql --defaults-file=${mysqlCnfDir}/.${db}-${stack}.cnf -e "use ${db}-${stack}; update ${stack}_postmeta set meta_key = REPLACE(meta_key,'wp_', '${stack}_' ) where meta_key LIKE 'wp_%'; commit;"
mysql --defaults-file=${mysqlCnfDir}/.${db}-${stack}.cnf -e "use ${db}-${stack}; update ${stack}_usermeta set meta_key = REPLACE(meta_key,'wp_', '${stack}_' ) where meta_key LIKE 'wp_%'; commit;"
mysql --defaults-file=${mysqlCnfDir}/.${db}-${stack}.cnf -e "use ${db}-${stack}; update ${stack}_options set option_name = REPLACE(option_name,'wp_', '${stack}_' ) where option_name LIKE 'wp_%'; commit;"

}


############################################################## TTY ########################################################################
if $TTY; then
  # For non-root users, add the current directory to the search path:
  if [ ! "$(id -u)" = "0" ]; then
   pathmunge . after
  fi
  
  PS2='>> '
  
  bind '"\e[1~": beginning-of-line'
  bind '"\e[4~": end-of-line'
  bind '"\eOC":forward-word'
  bind '"\eOD":backward-word'
  bind '"\e[3~": delete-char'
  bind '"\C-?": backward-delete-char'
  
  alias ll='sudo ls -Alq -F ${ls_colors}'
  alias lrt='sudo ls -lArtq -F ${ls_colors}'
  alias lla='sudo ls -lAq -F ${ls_colors}'

  alias screen='screen -UxdRR -t ${HOSTNAME}'
  alias tmuxx='tmux a -t ldo || tmux new -s ldo "tmux source-file ${DIREXPLOIT}/etc/tmuxrc"'
  alias tmuxr='tmux source-file ${DIREXPLOIT}/etc/tmuxrc'

  alias srvshow='sudo netstat -plntu'
  
  alias cdconf='cd ${httpConfd}/..'
  alias cdconfd='cd ${httpConfd}'
  alias cdhtml='cd ${httpHtml}'
  alias cdlog='cd ${httpLogs}'
  alias cdlogs='cd ${httpLogs}'
  alias tlogs='cd ${httpLogs};tail -f *.log'
  alias tlogsl='cd ${httpLogs};tail -f *.log|lnav'
  
  alias htstart='sudo systemctl start apache2'
  alias htrestart='sudo systemctl restart apache2'
  alias htstop='sudo systemctl stop apache2'
  alias htreload='sudo systemctl reload apache2'
  alias htcheck='sudo systemctl status apache2.service'
  alias htmem='ps -ylC apache2 | awk '"'"'{x += $8;y += 1} END {print "Apache Memory Usage (MB): "x/1024; print "Average Proccess Size (MB): "x/((y-1)*1024)}'"'"''
  alias phprestart='sudo service php7.0-fpm restart'
  alias phpreload='sudo service php7.0-fpm reload'
  alias phpcheck='sudo service php7.0-fpm status'
  alias modcheck='sudo sudo apache2ctl -M'
  alias dbstart='sudo systemctl start mysql'
  alias dbrestart='sudo systemctl restart mysql'
  alias dbstop='sudo killall -15 mysqld'
  alias dbcheck='sudo systemctl status mysql'
  alias netdatastart='sudo systemctl start netdata'
  alias netdatarestart='sudo systemctl restart netdata'
  alias netdatastop='sudo killall -15 netdata'
  alias netdatacheck='sudo systemctl status netdata'
  alias prostart='sudo systemctl start prometheus'
  alias prorestart='sudo systemctl restart prometheus'
  alias prostop='sudo killall -15 prometheus'
  alias procheck='sudo systemctl status prometheus'
  alias grafstart='sudo systemctl start grafana-server'
  alias grafrestart='sudo systemctl restart grafana-server'
  # alias grafrestart='killall grafana; sudo nohup /usr/sbin/grafana --config=/etc/grafana/grafana.ini --homepath /usr/share/grafana cfg:default.paths.logs=/var/log/grafana cfg:default.paths.data=/var/lib/grafana &'
  alias grafstop='sudo killall -15 grafana-server'
  alias grafcheck='sudo systemctl status grafana-server'
  alias sshrestart='sudo service sshd reload'
  alias modsec='grep ^SecRuleEngine /etc/modsecurity/modsecurity.conf'
  alias modsecen='perl -pi -e "s/SecRuleEngine Off/SecRuleEngine On/" /etc/modsecurity/modsecurity.conf; htreload; modsec'
  alias modsecdis='perl -pi -e "s/SecRuleEngine On/SecRuleEngine Off/" /etc/modsecurity/modsecurity.conf; htreload; modsec'
  
  alias ngstart='sudo service nginx start'
  alias ngrestart='sudo service nginx restart'
  alias ngreload='sudo service nginx reload || ngcheck'
  alias ngstop='sudo service nginx stop'
  alias ngcheck='sudo service nginx status'
  alias ngmodules='sudo nginx -V 2>&1 | tr -- - "\n" | grep _module'
  alias nlogs='cd ${nginxLogs};tail -f *.log'
  alias nlogsl='cd ${nginxLogs};tail -f *.log|lnav'
  alias nglogs='tail -f ${nginxLogs}/*.log ${httpHtml}/*/logs/*.log'
  alias nglogsl='tail -f  ${nginxLogs}/*.log ${httpHtml}/*/logs/*.log | lnav'
  alias nglogl='lnav ${nginxLogs}/*.log ${httpHtml}/*/logs/*.log'

  alias enable_staging='nginx_dissite blog-staging.derewonko.com-redirect.vhost;nginx_ensite blog-staging.derewonko.com.vhost;ngreload'
  alias disable_staging='nginx_dissite blog-staging.derewonko.com.vhost;nginx_ensite blog-staging.derewonko.com-redirect.vhost;ngreload'
  alias gitp='git add . && git commit && git push'
  
fi

#=========================================================================================================================================#
# echo path3=$PATH
[ -s "${DIREXPLOIT}/etc/ENTITY/${ENTITY}/profile.${HOSTNAME}.sh" ] && . ${DIREXPLOIT}/etc/ENTITY/${ENTITY}/profile.${HOSTNAME}.sh
# echo path4=$PATH
! ${allexport} && set +a && unset allexport
# echo end AWS
showLogon
