local path2Check binPath binary TMP Subject From To Cc Bcc Content fileBody verbose attachFiles
TMP=/tmp/${FUNCNAME}.$$.tmp

(( $# < 2 )) && echo2 "${C}${FUNCNAME}${c} [-F From] <-T To ..> [-C Cc.. ] [-B Cc ..] [-S Subject] [-f fileBody | -c \"Body\"] [-a attachFiles ..] ${nn[2]}(From*=${HOSTNAME}@${defaultDomain}${END}" && return 99
From=${HOSTNAME}@${defaultDomain}
Subject="message from ${LOGNAME}"
Content="this is a test sent from ${HOSTNAME}@${defaultDomain}, on ${DATE_LOG}"
verbose=""

# getopts:
local _NOARGS _OPT
while getopts :F:T:C:B:S:f:c:a:xX _OPT 2>/dev/null
do
{
  case ${_OPT} in
    x) local Verbose=true ;;
    X) local Debug=true; local Verbose=true; verbose=v ;;
    F) From="${OPTARG}" ;;
    T) To="${To}${To:+ }${OPTARG}" ;;
    C) Cc="${Cc}${Cc:+ }${OPTARG}" ;;
    B) Bcc="${Bcc}${Bcc:+ }${OPTARG}" ;;
    S) Subject="${OPTARG}" ;;
    c) Content="${OPTARG}" ;;
    f) fileBody="${OPTARG}" ;;
    a) [ -f "${OPTARG}" ] && attachFiles="${attachFiles}${Cc:+ }${OPTARG}" ;;
    *) _NOARGS="${_NOARGS}${_NOARGS+, }-${OPTARG}" ;;
  esac
}
done
shift $((OPTIND - 1))
unset _OPT OPTARG OPTIND
[ "X${_NOARGS}" != "X" ] && ERROR param "${_NOARGS}"

! test "${To}" && ERROR missing To 0 && return 1

printf "To: ${To}\n" >${TMP}
test "${Cc}" && printf "Cc: ${Cc}\n" >>${TMP}
test "${Bcc}" && printf "Bcc: ${Bcc}\n" >>${TMP}
printf "From: ${From}\n" >>${TMP}
printf "Subject: ${Subject}\n" >>${TMP}
[ -s "${fileBody}" ] && cat ${fileBody} >>${TMP} || printf "${Content}\n" >>${TMP}
printf ".\n" >>${TMP}

if test "${attachFiles}"; then
  uuencode ${attachFiles} | mail -${verbose}s "${Subject}" -c "${Cc}" ${To} >/dev/null 2>&1
else
  cat ${TMP} | sendmail -${verbose}t
fi
$Debug && echo2 "${m}TMP=${TMP}${END}" || rm -f ${TMP}
