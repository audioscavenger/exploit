setColors() {
#@(t)  |UNAME |out|mod|set|sys|net|app|mis| description                                                                                        |
#@(p)  |AIX   |   |   | x |   |   |   | x | set a bunch of color variables                                                                     |
local allexport num colorNums i
(set -o | grep allexport | grep -q on) && allexport=true || allexport=false; set -a

if $TTY; then
  if [ -x /usr/bin/dircolors ]; then
    if [ -s "${DIREXPLOIT}/etc/LS_COLORS.256dark" -a "${UNAME}" != "AIX" ]; then
    dircolors -b ${DIREXPLOIT}/etc/LS_COLORS.256dark >/dev/null 2>&1 && eval $( dircolors -b ${DIREXPLOIT}/etc/LS_COLORS.256dark )
    fi
  fi
  # ash/busybox supports LS_COLORS even w/o dircolors
  test ${LS_COLORS} || LS_COLORS='no=00:fi=00:di=01;34:ln=00;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=41;33;01:ex=00;32:*.cmd=00;32:*.exe=01;32:*.com=01;32:*.bat=01;32:*.btm=01;32:*.dll=01;32:*.tar=00;31:*.tbz=00;31:*.tgz=00;31:*.rpm=00;31:*.deb=00;31:*.arj=00;31:*.taz=00;31:*.lzh=00;31:*.lzma=00;31:*.zip=00;31:*.zoo=00;31:*.z=00;31:*.Z=00;31:*.gz=00;31:*.bz2=00;31:*.tb2=00;31:*.tz2=00;31:*.tbz2=00;31:*.avi=01;35:*.bmp=01;35:*.fli=01;35:*.gif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mng=01;35:*.mov=01;35:*.mpg=01;35:*.pcx=01;35:*.pbm=01;35:*.pgm=01;35:*.png=01;35:*.ppm=01;35:*.tga=01;35:*.tif=01;35:*.xbm=01;35:*.xpm=01;35:*.dl=01;35:*.gl=01;35:*.wmv=01;35:*.aiff=00;32:*.au=00;32:*.mid=00;32:*.mp3=00;32:*.ogg=00;32:*.voc=00;32:*.wav=00;32:';
fi

###################################################################
# case ${UNAME} in
# AIX|SunOS|Darwin) => no tput
if [ -n "$(type tput 2>/dev/null)" -a "${TERM}" != "cygwin" ]; then

# http://wiki.bash-hackers.org/scripting/terminalcodes
hideCursor='eval tput civis'
showCursor='eval tput cnorm'
$TTY && alias hideCursor=$hideCursor
$TTY && alias showCursor=$showCursor
CLS=$(tput clear)
BEL=$(tput bel)

# text / foreground
k=$(tput setaf 0)
r=$(tput setaf 1)
g=$(tput setaf 2)
y=$(tput setaf 3)
b=$(tput setaf 4)
m=$(tput setaf 5)
c=$(tput setaf 6)
w=$(tput setaf 7)
K=$(tput setaf 8)
R=$(tput setaf 9)
G=$(tput setaf 10)
Y=$(tput setaf 11)
B=$(tput setaf 12)
M=$(tput setaf 13)
C=$(tput setaf 14)
W=$(tput setaf 15)
# END=$(tput sgr0) # issue on some Linux: it produces ^[(B instead of ^[[0m
END=$(printf '\033[0m')
N=$K
n=$k

HIGH=$(tput bold)
SMUL=$(tput smul)	# underline
RMUL=$(tput rmul)	# underline stop
BLINK=$(tput blink)
REVERSE=$(tput smso)  # Enter standout mode (bold on rxvt)
REVERSO=$(tput rmso)  # Exit standout mode

# background
Rk=$(tput setab 0)
Rn=$Rk
Rr=$(tput setab 1)
Rg=$(tput setab 2)
Ry=$(tput setab 3)
Rb=$(tput setab 4)
Rm=$(tput setab 5)
Rc=$(tput setab 6)
Rw=$(tput setab 7)
RK=$(tput setab 8)
RN=$RK
RR=$(tput setab 9)
RG=$(tput setab 10)
RY=$(tput setab 11)
RB=$(tput setab 12)
RM=$(tput setab 13)
RC=$(tput setab 14)
RW=$(tput setab 15)

###################################################################
# http://wiki.bash-hackers.org/scripting/terminalcodes
# http://misc.flogisoft.com/bash/tip_colors_and_formatting
else
hideCursor=$(echo -en "\033[?25l")
showCursor=$(echo -en "\033[?25h")
$TTY && alias hideCursor='echo $hideCursor'
$TTY && alias showCursor='echo $showCursor'
CLS=$(echo -en "\x0c")
BEL=$(echo -en "\a")

# text / foreground
k=$(printf '\033[0;30m')
r=$(printf '\033[0;31m')
g=$(printf '\033[0;32m')
y=$(printf '\033[0;33m')
b=$(printf '\033[0;34m')
m=$(printf '\033[0;35m')
c=$(printf '\033[0;36m')
w=$(printf '\033[0;37m')
K=$(printf '\033[1;30m')
R=$(printf '\033[1;31m')
G=$(printf '\033[1;32m')
Y=$(printf '\033[1;33m')
B=$(printf '\033[1;34m')
M=$(printf '\033[1;35m')
C=$(printf '\033[1;36m')
W=$(printf '\033[1;37m')
END=$(printf '\033[0m')
N=$K
n=$k

# TODO: test echo -en | printf on different systems because I don't remember why I use printf in the first place
HIGH=$(echo -en "\033[1m")
SMUL=$(echo -en "\033[4m")  # underline
RMUL=$(echo -en "\033[3m")  # underline stop
BLINK=$(echo -en "\033[5m")
REVERSE=$(echo -en "\e[7m")  # smso Enter standout mode (bold on rxvt)
REVERSO=$(echo -en "\e[m")  # rmso Exit standout mode # TODO: find a working code for REVERSO/rmso

# background
# WARNING: from time to time, gotta change [5; by [6;
RK=$(printf '\033[5;40m')
Rk=$(printf '\033[40m')
RN=$RK
Rn=$Rk
RR=$(printf '\033[5;41m')
Rr=$(printf '\033[41m')
RG=$(printf '\033[5;42m')
Rg=$(printf '\033[42m')
RY=$(printf '\033[5;43m')
Ry=$(printf '\033[43m')
RB=$(printf '\033[5;44m')
Rb=$(printf '\033[44m')
RM=$(printf '\033[5;45m')
Rm=$(printf '\033[45m')
RC=$(printf '\033[5;46m')
Rc=$(printf '\033[46m')
RW=$(printf '\033[5;47m')
Rw=$(printf '\033[47m')
fi

#if [ "${TERM}" != "cygwin" ]; then
# for i in $(seq 0 23); do gray[$i]=$(printf "\033[38;5;$((232 + i))m") ; done
for i in $(seq 0 23); do eval g$i="$(printf \"\\033\[38\;5\;$((232 + i))m\")" ; done
#for i in $(seq 0 23); do eval echo -ne \"\$g${i} x\"; done

typeset -xA colorNums yy YY mm MM cc CC kk KK gg GG
# 256 colors XTERM: 38=FG 48=BG
# YELLOW
# auto assign array does not work with zsh: first assignment starts at 1 instead of 0!
#colorNums=(058 094 184 220 190 226)
unset i;for col in 058 094 184 220 190 226; do colorNums[${i:-0}]=$col;let i++;done
for num in 0 1 2 3 4 5; do yy[$num]=$(printf "\033[38;5;${colorNums[$num]}m"); YY[$num]=$(printf "\033[48;5;${colorNums[$num]}m"); done
# MAGENTA
#colorNums=(054 090 126 162 198 201)
unset i;for col in 054 090 126 162 198 201; do colorNums[${i:-0}]=$col;let i++;done
for num in 0 1 2 3 4 5; do mm[$num]=$(printf "\033[38;5;${colorNums[$num]}m"); MM[$num]=$(printf "\033[48;5;${colorNums[$num]}m"); done
# CYAN
#colorNums=(017 018 019 020 021 027)
unset i;for col in 017 018 019 020 021 027; do colorNums[${i:-0}]=$col;let i++;done
for num in 0 1 2 3 4 5; do cc[$num]=$(printf "\033[38;5;${colorNums[$num]}m"); CC[$num]=$(printf "\033[48;5;${colorNums[$num]}m"); done
# GRAY
#colorNums=(233 236 240 243 248 254)
unset i;for col in 233 236 240 243 248 254; do colorNums[${i:-0}]=$col;let i++;done
for num in 0 1 2 3 4 5; do kk[$num]=$(printf "\033[38;5;${colorNums[$num]}m"); KK[$num]=$(printf "\033[48;5;${colorNums[$num]}m"); done
# GREEN
#colorNums=(022 022 028 034 040 046)
unset i;for col in 022 022 028 034 040 046; do colorNums[${i:-0}]=$col;let i++;done
for num in 0 1 2 3 4 5; do gg[$num]=$(printf "\033[38;5;${colorNums[$num]}m"); GG[$num]=$(printf "\033[48;5;${colorNums[$num]}m"); done

Brown=$(printf "\033[38;5;130m")
Skin=$(printf "\033[38;5;223m")

BLUEf="${B}"
BLUE="${b}"
REDf="${R}"
RED="${r}"
GREENf="${G}"
GREEN="${g}"
YELLOWf="${Y}"
YELLOW="${y}"
MANGENTAf="${M}"
MANGENTA="${m}"
WHITEf="${W}"
WHITE="${w}"
CYANf="${C}"
CYAN="${c}"

OK="${k}${RG}OK${END}"
KO="${k}${RR}KO${END}"
NA="${k}${RK}NA${END}"
START="${G}START${END}"
STOP="${R}STOP${END}"
STARTED="${g}STARTED${END}"
STOPPED="${r}STOPPED${END}"

# The "sed -r" trick does not work on every Linux, I still dunno why:
# [ "${UNAME}" = "SunOS" ] && DECOLORIZE='eval sed "s,${END}\[[0-9;]*[m|K],,g"' || DECOLORIZE='eval sed -r "s/\x1B\[([0-9]{1,2}(;[0-9]{1,3})*?)?[m|K]//g"'
DECOLORIZE='eval sed "s,${END}\[[0-9;]*[m|K],,g"'
COLORIZE='eval sed -e "s/{END}/${END}/g" -e "s/{HIGH}/${HIGH}/g" -e "s/{SMUL}/${SMUL}/g" -e "s/{RMUL}/${RMUL}/g" -e "s/{BLINK}/${BLINK}/g" -e "s/{REVERSE}/${REVERSE}/g" -e "s/{REVERSO}/${REVERSO}/g"'
WORDS=' -e "s/{OK}/${OK}/g" -e "s/{KO}/${KO}/g" -e "s/{NA}/${NA}/g" -e "s/{START}/${START}/g" -e "s/{STOP}/${STOP}/g" -e "s/{STARTED}/${STARTED}/g" -e "s/{STOPPED}/${STOPPED}/g"'
LOWS=' -e "s/{k}/${k}/g" -e "s/{r}/${r}/g" -e "s/{g}/${g}/g" -e "s/{y}/${y}/g" -e "s/{b}/${b}/g" -e "s/{m}/${m}/g" -e "s/{c}/${c}/g" -e "s/{w}/${w}/g" -e "s/{g3}/${g3}/g" -e "s/{g8}/${g8}/g"'
HIGHS=' -e "s/{K}/${K}/g" -e "s/{R}/${R}/g" -e "s/{G}/${G}/g" -e "s/{Y}/${Y}/g" -e "s/{B}/${B}/g" -e "s/{M}/${M}/g" -e "s/{C}/${C}/g" -e "s/{W}/${W}/g"'
REVLOWS=' -e "s/{Rk}/${Rk}/g" -e "s/{Rr}/${Rr}/g" -e "s/{Rg}/${Rg}/g" -e "s/{Ry}/${Ry}/g" -e "s/{Rb}/${Rb}/g" -e "s/{Rm}/${Rm}/g" -e "s/{Rc}/${Rc}/g" -e "s/{Rw}/${Rw}/g"'
REVHIGHS=' -e "s/{RK}/${RK}/g" -e "s/{RR}/${RR}/g" -e "s/{RG}/${RG}/g" -e "s/{RY}/${RY}/g" -e "s/{RB}/${RB}/g" -e "s/{RM}/${RM}/g" -e "s/{RC}/${RC}/g" -e "s/{RW}/${RW}/g"'
REVYELLOWS=' -e "s/{YY0}/${YY[0]}/g" -e "s/{YY1}/${YY[1]}/g" -e "s/{YY2}/${YY[2]}/g" -e "s/{YY3}/${YY[3]}/g" -e "s/{YY4}/${YY[4]}/g"'
REVMAGENTAS=' -e "s/{MM0}/${MM[0]}/g" -e "s/{MM1}/${MM[1]}/g" -e "s/{MM2}/${MM[2]}/g" -e "s/{MM3}/${MM[3]}/g" -e "s/{MM4}/${MM[4]}/g"'
REVCYANS=' -e "s/{CC0}/${CC[0]}/g" -e "s/{CC1}/${CC[1]}/g" -e "s/{CC2}/${CC[2]}/g" -e "s/{CC3}/${CC[3]}/g" -e "s/{CC4}/${CC[4]}/g"'
REVGRAYS=' -e "s/{KK0}/${KK[0]}/g" -e "s/{KK1}/${KK[1]}/g" -e "s/{KK2}/${KK[2]}/g" -e "s/{KK3}/${KK[3]}/g" -e "s/{KK4}/${KK[4]}/g"'
REVGREENS=' -e "s/{GG0}/${GG[0]}/g" -e "s/{GG1}/${GG[1]}/g" -e "s/{GG2}/${GG[2]}/g" -e "s/{GG3}/${GG[3]}/g" -e "s/{GG4}/${GG[4]}/g"'
# COLORIZE Usage:
# command |${COLORIZE} ${LOWS} ${HIGHS} ${REVLOWS} ${REVHIGHS}
#fi

! ${allexport} && set +a
}
