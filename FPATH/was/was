was() {
#@(t)  |UNAME |out|mod|set|sys|net|app|mis| description                                                                                        |
#@(p)  |*     |   |   | x |   |   | x |   | load Websphere ND environment <version> via was_setEnv                                             |
local __wasVersion _version
(( $# == 0 )) && showAlias && return 99

__wasVersion=$1
export wasLastVersion=${wasVersion}

for _version in 85 8 7 61 6
do
  removePath $(eval echo \${wasDmgrDir${_version}})
  removePath $(eval echo \${wasNodeDir${_version}})
done

if [ "${__wasVersion}" = "off" -o "${__wasVersion}" = "reload" ]
then
  unset wasVersion LOCALHOST_NAME WAS_USER wasRoot wasWASRoot WAS_HOME wasPLGRoot wasUPDRoot wasIHSRoot wasProfDir wasLogsDir wasDmgrDir wasNodeDir wasDmgrAppDir wasNodeAppDir wasApplicationsDir wasLocalConfDir wasLocalNodesDir cellName wasProfiles wasLocalCellsPath CONFIG_ROOT PROFILE_ROOT JAVA_HOME JRE_HOME wasDmgrConfigPath wasDmgrNodeName dmgrHostName wasDmgrConnType wasLocalDmgrAddress wasLocalDmgrPort dmgrBOOTSTRAP_ADDRESS dmgrSOAP_CONNECTOR_ADDRESS dmgrIPC_CONNECTOR_ADDRESS dmgrBOOTSTRAP_PORT dmgrSOAP_CONNECTOR_PORT dmgrIPC_CONNECTOR_PORT wasLocalNodes wasRemoteNodes wasLocalServerTuples wasRemoteServerTuples wasDmgrCLIENTSOAP wasDmgrCLIENTSAS wasDmgrCLIENTSSL wasDmgrCLIENTIPC wasNodeCLIENTSOAP wasNodeCLIENTSAS wasNodeCLIENTSSL wasNodeCLIENTIPC JYTHON_VERSION wasCoreLongNamewasCoreLongName2eval wasCoreIdName wasCoreIdName2eval wasCoreFixName wasCoreFixName2eval wasCoreLogName wasCoreLogName2eval
  unset THIN_CLIENT_HOME thinClient thinClientIPC thinClientRMI thinClientSOAP wasBinPath6 wasBinPath61 wasBinPath7 wasBinPath8 wasBinPath85 wasBinPathSuppl6 wasBinPathSuppl61 wasBinPathSuppl7 wasBinPathSuppl8 wasBinPathSuppl85 wasConfigFilesDir wasCoreLongName wasCoreLongName2eval wasCoreName wasCoreName2eval wasCoreProductRepoDir6 wasCoreProductRepoDir61 wasCoreProductRepoDir7 wasCoreProductRepoDir8 wasCoreProductRepoDir85 wasDmgrAdminUserName wasDmgrPort wasDmgrProfileName wasNodeProfileName wasOjdbcDriverPath wasPortList wasProductLocation6 wasProductLocation61 wasProductLocation7 wasProductLocation8 wasProductLocation85 wasRepoDir wasResponsefilePath wasResponsefilePath6 wasResponsefilePath61 wasResponsefilePath7 wasResponsefilePath8 wasResponsefilePath85 wsadmin wsadminIPC wsadminRMI wsadminSOAP wsadmin_rlwrap wsadmin_rlwrap_IPC wsadmin_rlwrap_RMI wsadmin_rlwrap_SOAP 
  setPS1
  [ "${__wasVersion}" = "off" ] && unset wasLastVersion && return
fi

[ -z "${wasVersion}" ] && was_setEnv
export wasVersion=$__wasVersion
test ${wasLastVersion} && [ "${__wasVersion}" = "reload" ] && export wasVersion=${wasLastVersion}

eval export wasProductLocation="\${wasProductLocation${wasVersion}}"
eval export wasBinPath="\${wasBinPath${wasVersion}}"
eval export wasBinPathSuppl="\${wasBinPathSuppl${wasVersion}}"
eval export wasResponsefilePath="\${wasResponsefilePath${wasVersion}}"
# TODO: this works on cmd line, why not here ? # eval export wasCoreProductRepoDir=\(\"\${wasCoreProductRepoDir${wasVersion}[@]}\"\)
local x="wasCoreProductRepoDir${wasVersion}[@]"; local xx=0
for value in ${!x}; do wasCoreProductRepoDir[$xx]="$value"; let xx++; done
export wasCoreProductRepoDir

eval export JYTHON_VERSION="\${JYTHON_VERSION${wasVersion}}"
eval export WAS_VERSION="\${WAS_VERSION${wasVersion}}"
eval export WAS_USER="\${WAS_USER${wasVersion}}"
eval export wasIHSRoot="\${wasIHSRoot${wasVersion}}"
eval export wasPLGRoot="\${wasPLGRoot${wasVersion}}"
eval export wasRoot="\${wasRoot${wasVersion}}"
[ ! -d "${wasRoot}" ] && ERROR was "version ${wasVersion} NON DETECTEE" && return 99

eval export wasWASRoot="\${wasWASRoot${wasVersion}}"
eval export WAS_HOME="\${WAS_HOME${wasVersion}}"
eval export wasUPDRoot="\${wasUPDRoot${wasVersion}}"
eval export wasProfDir="\${wasProfDir${wasVersion}}"
eval export wasLogsDir="\${wasLogsDir${wasVersion}}"
eval export wasDmgrLogsDir="\${wasDmgrLogsDir${wasVersion}}"
eval export wasNodeLogsDir="\${wasNodeLogsDir${wasVersion}}"
eval export wasDmgrDir="\${wasDmgrDir${wasVersion}}"
eval export wasNodeDir="\${wasNodeDir${wasVersion}}"
eval export wasDmgrAppDir="\${wasDmgrAppDir${wasVersion}}"
eval export wasNodeAppDir="\${wasNodeAppDir${wasVersion}}"
eval export wasDmgrProfile="\${wasDmgrProfile${wasVersion}}"
eval export wasNodeProfile="\${wasNodeProfile${wasVersion}}"
eval export wasApplicationsDir="\${wasApplicationsDir${wasVersion}}"
eval export wasLocalConfDir="\${wasLocalConfDir${wasVersion}}"
eval export wasLocalCellsPath="\${wasLocalCellsPath${wasVersion}}"
eval export wasLocalNodesDir="\${wasLocalNodesDir${wasVersion}}"
eval export cellName="\${cellName${wasVersion}}"
eval export wasProfiles="\"\${wasProfiles${wasVersion}}\""
eval export CONFIG_ROOT="\${CONFIG_ROOT${wasVersion}}"
eval export PROFILE_ROOT="\${PROFILE_ROOT${wasVersion}}"
eval export JAVA_HOME="\${JAVA_HOME${wasVersion}}"
eval export JRE_HOME="\${JRE_HOME${wasVersion}}"
eval export wasDmgrConfigPath="\${wasDmgrConfigPath${wasVersion}}"
eval export wasDmgrNodeName="\${wasDmgrNodeName${wasVersion}}"

eval export dmgrHostName="\${dmgrHostName${wasVersion}}"
eval export wasDmgrConnType="\${wasLocalDmgrConnType${wasVersion}}"
eval export wasLocalDmgrAddress="\${wasLocalDmgrAddress${wasVersion}}"
eval export wasLocalDmgrPort="\${wasLocalDmgrPort${wasVersion}}"
eval export dmgrBOOTSTRAP_ADDRESS="\${dmgrBOOTSTRAP_ADDRESS${wasVersion}}"
eval export dmgrSOAP_CONNECTOR_ADDRESS="\${dmgrSOAP_CONNECTOR_ADDRESS${wasVersion}}"
eval export dmgrIPC_CONNECTOR_ADDRESS="\${dmgrIPC_CONNECTOR_ADDRESS${wasVersion}}"
eval export dmgrBOOTSTRAP_PORT="\${dmgrBOOTSTRAP_PORT${wasVersion}}"
eval export dmgrSOAP_CONNECTOR_PORT="\${dmgrSOAP_CONNECTOR_PORT${wasVersion}}"
eval export dmgrIPC_CONNECTOR_PORT="\${dmgrIPC_CONNECTOR_PORT${wasVersion}}"

eval export wasLocalNodes="\${wasLocalNodes${wasVersion}}"
eval export wasRemoteNodes="\${wasRemoteNodes${wasVersion}}"
eval export wasLocalServerTuples="\${wasLocalServerTuples${wasVersion}}"
eval export wasRemoteServerTuples="\${wasRemoteServerTuples${wasVersion}}"

eval export wasDmgrCLIENTSOAP="\${wasDmgrCLIENTSOAP${wasVersion}}"
eval export wasDmgrCLIENTSAS="\${wasDmgrCLIENTSAS${wasVersion}}"
eval export wasDmgrCLIENTSSL="\${wasDmgrCLIENTSSL${wasVersion}}"
eval export wasDmgrCLIENTIPC="\${wasDmgrCLIENTIPC${wasVersion}}"
eval export wasNodeCLIENTSOAP="\${wasNodeCLIENTSOAP${wasVersion}}"
eval export wasNodeCLIENTSAS="\${wasNodeCLIENTSAS${wasVersion}}"
eval export wasNodeCLIENTSSL="\${wasNodeCLIENTSSL${wasVersion}}"
eval export wasNodeCLIENTIPC="\${wasNodeCLIENTIPC${wasVersion}}"

test ${wasDmgrDir} && pathmunge ${wasDmgrDir}/bin
test ${wasNodeDir} && pathmunge ${wasNodeDir}/bin
was_setPS1
}
