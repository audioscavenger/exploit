checkPorts()
{
# ;SOURCE;;;;DESTINATION;;;;;STREAM INFO;;;;
# Location;srcHostname;IP;IP_NAT;Location;dstHostname;IP;IP_NAT;Transport;Port;DATE;status;Protocol;Commentaires;
local TMP PARALLEL lines csvFileIn csvFileOut OPTIONS NCOPTIONS srcFQDN srcHostnames srcHostname dstHostnames dstHostname ports Port command SOURCE DESTINATION PORTS job jobs csvLine srcIP dstIP Protocol Date status srcLoc srcNAT dstLoc dstNAT Transport Commentaire DEBUG nbLinesIn nbLinesOut

setDate
remoteUser=${remoteUser:-root}
parallelJobs=${parallelJobs:-12}
jobs=0
TMP=$(mktemp -t ${FUNCNAME[0]}.XXXXXXX)
LOG=/tmp/${FUNCNAME[0]}.$DATE.log
LOGG="tee -a ${LOG}"
NCOPTIONS="-c -r"
PARALLEL=true
TEST=false

while [ "x${1:0:1}" == "x-" ]; do
  case "x$1" in
  x-d)  local Debug=true; NCOPTIONS="-d ${NCOPTIONS}" ;;
  x-p)  PARALLEL=false ;;
  x-t)  TEST=true ;;
  esac
  shift
done

csvFileIn=$1
csvFileOut="${csvFileIn%\.*}.done.${DAY}.csv"

if (( $# < 1 )); then
  echo "syntax: ${C}${FUNCNAME[0]} ${c}[-dpt] <csvFileIn.csv> ${N}(-p: disable parallel tasking; -t: test and just print commands; -d: netcatt debug)${END}" >&2
  ${print} "\n${SMUL}fichiers disponibles${END}:\n${c}" >&2
  ls -d1 ${DIREXPLOIT}/etc/ENTITY/${ENTITY}/EACB*.csv 2>/dev/null | grep -v ".done."
  ls -d1 ${repoDir}/EACB/EACB*.csv >&2 | grep -v ".done."
  ${print} ${END} >&2
  return 99
fi

[ -z "${remoteProfile}" ] && ERROR var remoteProfile && return 99
#[ "${HOSTNAME}" != "qoolbox64" ] && ERROR host "launch ${FUNCNAME[0]} ONLY from ${C}qoolbox64${END}" && return 99
[ ! -s "${csvFileIn}" ] && ERROR exist "${csvFileIn}" 0 && return 99

file ${csvFileIn} | grep -q CRLF && dos2unix -f ${csvFileIn}
head -2 ${csvFileIn} >${csvFileOut}

# for each srcHostname,
srcHostnames=$(${awk} 'BEGIN{FS=";";OFS=" "}; NR>2 {print $2}' ${csvFileIn} | sort | uniq)
for srcHostname in ${srcHostnames};do
  [ "${srcHostname}" == "www" ] && continue
  # for each dstHostname which is not == "www", parallel ssh a job with all ports
  dstHostnames=$(${awk} -v srcHostname=${srcHostname} 'BEGIN{FS=";";OFS=" "}; $2 ~ srcHostname {print $6}' ${csvFileIn} | sort | uniq)
  for dstHostname in ${dstHostnames}; do
    ports=$(echo $(${awk} -v srcHostname=${srcHostname} -v dstHostname=${dstHostname} 'BEGIN{FS=";";OFS=" "}; $2 ~ srcHostname && $6 ~ dstHostname {print $10}' ${csvFileIn} | sort | uniq))
    SOURCE[$jobs]=${srcHostname}
    DESTINATION[$jobs]=${dstHostname}
    PORTS[$jobs]="${ports}"
    $Debug && echo "${m}SOURCE[$jobs]=${SOURCE[$jobs]}; DESTINATION[$jobs]${DESTINATION[$jobs]}; PORTS[$jobs]=\"${PORTS[$jobs]}\"${END}" |${LOGG}
    let jobs+=1
  done
done
let jobs-=1

nbLinesIn=$(cat ${csvFileIn} | wc -l)
$Echo ${C} DATE "csvFileIn ($((nbLinesIn - 2)) lines)" "${csvFileIn}" START
$Echo ${c} DATE "csvFileOut" "${csvFileOut}"
$Echo ${c} DATE "LOG" "${LOG}"
$Echo ${c} DATE "total jobs=$jobs $($PARALLEL && ${print} 'parallelized * '${parallelJobs})" "$(echo $srcHostnames|wc -w) SOURCES -> $(echo $dstHostnames|wc -w) DESTINATIONS -> $(echo ${PORTS[@]}|wc -w) PORTS"

if $PARALLEL; then
  # http://savannah.gnu.org/forum/forum.php?forum_id=6761
  # parallel: Warning: YOU ARE USING --tollef. --tollef is obsolete and will be retired 20140222.
  if ($TEST || $Debug); then
    echo "${m}parallel --gnu --jobs ${parallelJobs} --xapply echo \"${remoteProfile}; srcHostname={1}; netcatt ${NCOPTIONS} {1} {2} {3}\" ::: ${SOURCE[@]} ::: ${DESTINATION[@]} ::: \"${PORTS[@]}\"" |${LOGG}
    parallel --gnu --jobs ${parallelJobs} --xapply echo "\"netcatt ${NCOPTIONS} {1} {2} {3}\"" ::: ${SOURCE[@]} ::: ${DESTINATION[@]} ::: "${PORTS[@]}"
    $TEST && return 0
  fi
  ${print} ${N}
  parallel --gnu --jobs ${parallelJobs} --xapply "netcatt ${NCOPTIONS} {1} {2} {3}" ::: ${SOURCE[@]} ::: ${DESTINATION[@]} ::: "${PORTS[@]}" | tr -c '[:print:][:cntrl:]' '[?*]'| tee -a ${TMP}
else
  for job in $(seq 0 $jobs); do
    ($TEST || $Debug) && echo "${m}netcatt ${NCOPTIONS} ${SOURCE[$job]} ${DESTINATION[$job]} ${PORTS[$job]}${END}" |${LOGG}
    $TEST || netcatt ${NCOPTIONS} ${SOURCE[$job]} ${DESTINATION[$job]} ${PORTS[$job]} | tr -c '[:print:][:cntrl:]' '[?*]' | tee -a ${TMP}
  done
  $TEST && return 0
fi
dos2unix -f ${TMP}

# csvFileIn=--$1--;----$2-----; $3  ;  $4  ;  $5  ;----$6-----; $7  ;  $8  ;   $9    ; 10 ; 11 ; $12  ;   $13  ;----$14----
# csvFileIn=srcLoc;srcHostname;srcIP;srcNAT;dstLoc;dstHostname;dstIP;dstNAT;Transport;Port;Date;Status;Protocol;Commentaire

# TMP=--$1--;----$2-----; $3  ;  $4  ;  $5  ;----$6-----; $7  ;  $8  ;   $9    ; 10 ; 11 ;-$12--
# TMP=srcLoc;srcHostname;srcIP;srcNAT;dstLoc;dstHostname;dstIP;dstNAT;Transport;Port;Date;Status

# special treatment for "DESKTOP" srcHostname: netcatt is launched locally and srcIP won't be updated
# special treatment for "www" srcHostname: netcatt cannot be tested for srcHostname outside from here

while read -r line; do
  IFS=';' read -r srcLoc srcHostname srcIP srcNAT dstLoc dstHostname dstIP dstNAT Transport Port Date Status Protocol Commentaire <<< "$line"
  $Debug && echo "${srcLoc};${srcHostname};${srcIP};${srcNAT};${dstLoc};${dstHostname};${dstIP};${dstNAT};${Transport};${Port};${Date};${Status};${Protocol};${Commentaire};" >&2
  $Debug && echo "grep \";${srcHostname};.*;.*;.*;${dstHostname};.*;.*;.*;${Port};\" ${TMP}" >&2
  if (grep -q ";${srcHostname};.*;.*;.*;${dstHostname};.*;.*;.*;${Port};" ${TMP}); then
    $Debug && echo "${m}${awk} -F\; -v srcLoc='$srcLoc' -v srcHostname='$srcHostname' -v srcIP='$srcIP' -v srcNAT='$srcNAT' -v dstLoc='$dstLoc' -v dstNAT='$dstNAT' -v Transport='$Transport' -v Protocol='$Protocol' -v Commentaire='$Commentaire'${END}" >&2
    grep ";${srcHostname};.*;.*;.*;${dstHostname};.*;.*;.*;${Port};" ${TMP} |\
    ${awk} -F\; -v srcLoc="$srcLoc" -v srcHostname="$srcHostname" -v srcIP="$srcIP" -v srcNAT="$srcNAT" -v dstLoc="$dstLoc" -v dstNAT="$dstNAT" -v Transport="$Transport" -v Protocol="$Protocol" -v Commentaire="$Commentaire" '{if (srcHostname != "DESKTOP") {srcHostname=$2; srcIP=$3}; printf "%s;%s;%s;%s;%s;%s;%s;%s;%s;%s;%s;%s;%s;%s;\n",srcLoc,srcHostname,srcIP,srcNAT,dstLoc,$6,$7,dstNAT,Transport,$10,$11,$12,Protocol,Commentaire}'
  else
    # for all those non tested "www" lines: Date->$DAY; Status->"NA"
    echo "$srcLoc;$srcHostname;$srcIP;$srcNAT;$dstLoc;$dstHostname;$dstIP;$dstNAT;$Transport;$Port;$DAY;NA;$Protocol;Commentaire"
  fi
done <${csvFileIn} >${csvFileOut}

nbLinesOut=$(cat ${csvFileOut} | wc -l)
$Echo ${C} DATE "csvFileOut ($((nbLinesOut - 2)) lines)" "${csvFileOut}" DONE |${LOGG}

${awk} -F\; 'BEGIN{OFS=";";} {if ($12 == "OK") {printf ENVIRON["g"]} else {if ($12 == "NA") {printf ENVIRON["N"]} else {printf ENVIRON["r"]}}; $12 = "{"$12"}"; print}' ${csvFileOut} | ${COLORIZE} ${WORDS}
# $Debug && echo TMP=${TMP} || rm -f ${TMP}
$Echo ${C} DATE "csvFileOut ($((nbLinesOut - 2)) lines)" "${csvFileOut}" DONE |${LOGG}
}
