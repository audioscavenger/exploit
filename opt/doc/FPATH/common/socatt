socatt() {
# http://linuxfr.org/news/socat-un-outil-en-ligne-de-commande-pour-ma%C3%AEtriser-vos-sockets
echo2 "${nn[0]}TCP4:  Vous pouvez saisir du texte avec la bibliothèque readline et il sera envoyé en TCP à www.domain.org sur le port 80 (www). Pratique pour simuler des requêtes HTTP à la main:"
echo2 "${nn[2]}socat -d -d READLINE,history=$HOME/.http_history TCP4:www.domain.org:www,crnl"

echo2 "${nn[0]}TCP4:  C'est un simple transfert de données entre 2 flux TCP. Tout ce qui arrive sur le port 80 (www) de la machine locale est envoyé vers www.domain.org et inversement:"
echo2 "${nn[2]}socat TCP4-LISTEN:www TCP4:www.domain.org:www"

echo2 "${nn[0]}TCP4:  Dans cet exemple, socat va écrire tout ce qu'il reçoit sur le port 3334 dans un fichier:"
echo2 "${nn[2]}socat -u TCP4-LISTEN:3334,reuseaddr,fork OPEN:/tmp/in.log,creat,append"

echo2 "${nn[0]}RS232: Lancer un programme sur /tmp/ttyS0 et l'autre sur /tmp/ttyS1 et on a une communication bidirectionnelle série:"
echo2 "${nn[2]}socat PTY,link=/tmp/ttyS0,raw,echo=0 PTY,link=/tmp/ttyS1,raw,echo=0"

echo2 "${nn[0]}RS232: Transfert RS232 via TCP entre deux machine distantes:"
echo2 "${nn[0]}       sur la machine distante avec le port série physique (écran tactile, modem, ...):"
echo2 "${nn[2]}       socat FILE:/dev/ttyS0,echo=0,raw,nonblock TCP:3334"
echo2 "${nn[0]}  sur la machine client:"
echo2 "${nn[2]}  socat PTY,link=/tmp/ttyS0 TCP:distante:3334"

# http://www.dest-unreach.org/socat/doc/socat-genericsocket.html
}
