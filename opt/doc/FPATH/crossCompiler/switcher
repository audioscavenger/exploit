switcher()
{
(($# > 0)) && local arch=$1 && shift
setModule ${2:-${MODULE_NAME}}
set -a

case "${arch}" in
32)
  # remove the current TOOLCHAIN_PATH from the PATH
  removePath ${TOOLCHAIN_PATH:-off}/bin
  removePath ${TOOLCHAIN_PATH:-off}/${CROSSHOST}/bin
  export ARCH=${arch}
  echo "export CROSSHOST=${W}${CROSSHOST32}"${END}
  export CROSSHOST=${CROSSHOST32}
  removeLib ${MODBASE1DEV64}/lib64
  removeLib ${TMPDST64}${PREFIX}/lib64

  removeLib /lib64
  removeLib /usr/lib64
  removeLib ${CROSSBASE64}/lib
  removeLib ${CROSSBASE64}/${CROSSHOST64}/lib
  # libmunge ${CROSSBASE32}/${CROSSHOST32}/lib
  # libmunge ${CROSSBASE32}/lib
  libmunge /usr/lib
  libmunge /lib

  libmunge ${MODBASE1DEV32}/lib
  libmunge ${TMPDST32}${PREFIX}/lib
  # pathmunge ${TMPDST32}${PREFIX}/bin

  # force init of generic compilers
  CPPFLAGS="${CPPFLAGS32} -lrt"
  CFLAGS="${CFLAGS32}"
  CXXFLAGS="${CXXFLAGS32}"
  LDFLAGS="${LDFLAGS32} -lm"
  PKG_CONFIG_PATH="${PKG_CONFIG_PATH32}"
  DESTDIR=${TMPDST32}
  
  CC=${CROSSHOST}-gcc
  CXX=${CROSSHOST}-g++
  AR=${CROSSHOST}-ar
  LD=${CROSSHOST}-ld
  AS=${CROSSHOST}-as
  CPP=${CROSSHOST}-cpp
  RANLIB=${CROSSHOST}-ranlib
  STRIP=${CROSSHOST}-strip
  # add up the new choosen TOOLCHAIN_PATH to the PATH
  export TOOLCHAIN_PATH=${CROSSBASE}/${CROSSHOST}
  pathmunge ${TOOLCHAIN_PATH}/${CROSSHOST}/bin
  pathmunge ${TOOLCHAIN_PATH}/bin
  ;;
64)
  # remove the current TOOLCHAIN_PATH from the PATH
  removePath ${TOOLCHAIN_PATH:-off}/bin
  removePath ${TOOLCHAIN_PATH:-off}/${CROSSHOST}/bin
  export ARCH=${arch}
  echo "export CROSSHOST=${W}${CROSSHOST64}"${END}
  export CROSSHOST=${CROSSHOST64}
  removeLib ${MODBASE1DEV32}/lib
  removeLib ${TMPDST32}${PREFIX}/lib

  removeLib /lib
  removeLib /usr/lib
  removeLib ${CROSSBASE32}/lib
  removeLib ${CROSSBASE32}/${CROSSHOST32}/lib
  # libmunge ${CROSSBASE64}/lib
  # libmunge ${CROSSBASE64}/${CROSSHOST64}/lib
  # libmunge /usr/lib64
  # libmunge /lib64

  # WARNING: adding ${MODBASE1DEV64}/lib64 to LIBPATH leads to many issues
  # libmunge ${MODBASE1DEV64}/lib64
  libmunge ${TMPDST64}${PREFIX}/lib64
  # pathmunge ${TMPDST64}${PREFIX}/bin

  # force init of generic compilers
  CPPFLAGS="${CPPFLAGS64} -lrt"
  CFLAGS="${CFLAGS64}"
  CXXFLAGS="${CXXFLAGS64}"
  LDFLAGS="${LDFLAGS64} -lm"
  PKG_CONFIG_PATH="${PKG_CONFIG_PATH64}"
  DESTDIR=${TMPDST64}
  
  CC=${CROSSHOST}-gcc
  CXX=${CROSSHOST}-g++
  AR=${CROSSHOST}-ar
  LD=${CROSSHOST}-ld
  AS=${CROSSHOST}-as
  CPP=${CROSSHOST}-cpp
  RANLIB=${CROSSHOST}-ranlib
  STRIP=${CROSSHOST}-strip
  # add up the new choosen TOOLCHAIN_PATH to the PATH
  export TOOLCHAIN_PATH=${CROSSBASE}/${CROSSHOST}
  pathmunge ${TOOLCHAIN_PATH}/${CROSSHOST}/bin
  pathmunge ${TOOLCHAIN_PATH}/bin
  ;;
off)
  export ARCH=${arch}
  unset LD_LIBRARY_PATH CROSSBASE CROSSHOST TOOLCHAIN_PATH
  unset CPPFLAGS CFLAGS CXXFLAGS LDFLAGS PKG_CONFIG_PATH CC CXX AR LD AS CPP RANLIB STRIP
  return 0
  ;;
*)
  if [ "${ARCH}" != "off" ]; then
    [ "${ARCH}" == "32" ] && local COLOR=${COLOR:-${y}} || local COLOR=${COLOR:-${c}}
    echo "${B}switcher ${ARCH} ${MODULE_NAME}"${END}
    if [ "${TTY}" ]; then
      echo cdmr='cd ${MODULESROOT}'
      echo cdms='cd ${MODULE_SRC}'
      echo cdcr='cd ${COMPIL_ROOT}'
      echo cdrs='cd ${REPO_SRC}'
    fi
    
    printf "${w}%34s=${COLOR}%s${END}\n" PATH ${PATH}
    printf "${w}%34s=${COLOR}%s${END}\n" LD_LIBRARY_PATH ${LD_LIBRARY_PATH}
    printf "${w}%34s=${COLOR}%s${END}\n" PKG_CONFIG_PATH ${PKG_CONFIG_PATH}
    printf "${c}%34s=${B}%s${END}\n" \${TOOLCHAIN_PATH} ${TOOLCHAIN_PATH}
    printf "${c}%39s=${B}%s/${W}%s${END}\n" \${TOOLCHAIN_PATH}/${w}\${CROSSHOST}/lib ${TOOLCHAIN_PATH} ${CROSSHOST}/lib

    if [ "${ARCH}" == "32" ]; then
      printf "${y}%34s=${Y}%s${END}\n" \${MODBASE1DEV32} ${MODBASE1DEV32}
      printf "${w}%39s=${N}%s${w}%s${END}\n" \${TMPDST32}/${W}\${PREFIX} ${TMPDST32} ${PREFIX}
    else
      printf "${y}%34s=${Y}%s${END}\n" \${MODBASE1DEV64} ${MODBASE1DEV64}
      printf "${w}%39s=${N}%s${w}%s${END}\n" \${TMPDST64}/${W}\${PREFIX} ${TMPDST64} ${PREFIX}
    fi

    echo "    LIBS=${N}\"${LIBS}\""${END}
    echo "CPPFLAGS=${N}\"${CPPFLAGS}\""${END}
    echo "  CFLAGS=${N}\"${CFLAGS}\""${END}
    echo "CXXFLAGS=${N}\"${CXXFLAGS}\""${END}
    echo " LDFLAGS=${N}\"${LDFLAGS}\""${END}
    echo " DESTDIR=${N}${DESTDIR}"${END}
    echo
    echo "      CC=${N}${CC}"${END}
    echo "     CXX=${N}${CXX}"${END}
    echo "      AR=${N}${AR}"${END}
    echo "      LD=${N}${LD}"${END}
    echo "      AS=${N}${AS}"${END}
    echo "     CPP=${N}${CPP}"${END}
    echo "  RANLIB=${N}${RANLIB}"${END}
    echo "   STRIP=${N}${STRIP}"${END}
  fi
  return 0
  ;;
esac
}
