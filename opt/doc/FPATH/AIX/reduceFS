reduceFS() {
#@(t)  |UNAME |out|mod|set|sys|net|app|mis| description                                                                                        |
#@(p)  |AIX   | x | x |   | x |   |   |   | reduce AIX FS when it's fragmented, by decrement of PP size                                        |
(( $# < 2 )) && ERROR param "reduceFS <FS> <Mo> [clusterSize:-64Mo]" 0 && return 99
[ "$(whoami)" != "root" ] && ERROR user root 99
FStoReduce=$1
moToReduce=$2
shrink=${3:-64}

let loop=moToReduce/${shrink}
moReduced=0
n=0
while ((n < loop))
do
  chfs -a size=-${shrink}M ${FStoReduce}
  [[ $? -ne 0 ]] && break
  let n=n+1
  let moReduced=moReduced+shrink
done
echo "TOTAL reduced : $moReduced/$moToReduce Mo"
}
