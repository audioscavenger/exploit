addPurgeLogs2Crontab() {
#@(t)  |UNAME |out|mod|set|sys|net|app|mis| description                                                                                        |
#@(p)  |*     | x | x |   | x |   | x |   | APRIA: adds logs_dir to purge into crontab                                                         |
local logs_dir nbLines timeM HHgzip HHrm lineGzip lineRm FIND GZIP UNLINK
logs_dir=$1
HHgzip=${2:-00}
HHrm=${2:-01}

! (($#)) && echo2 "${C}${FUNCNAME}${c} <logs_dir> [minutes]${END}" && return 99
[ ! -d "${logs_dir}" ] && ERROR exist_rep "${logs_dir}" 0 && return 1

FIND=$(which find)
UNLINK=$(which unlink)
GZIP=$(which gzip)
crontab -l 2>/dev/null | grep -q ${logs_dir} && return 1

# count how many lines do exists already
nbLines=$(crontab -l 2>/dev/null | grep /find | grep logs | grep gzip | wc -l)
nbLines=$(( nbLines * 2 ))
(( nbLines < 10 )) && timeM="0${nbLines}" || timeM=${nbLines}

# starting from AIX 6.1 TL9, every "\" in crontab MUST be escaped!
  lineRm="${timeM} 00 * * * $FIND ${logs_dir} -type f -name \"*log*\" -mtime +45 -exec $UNLINK {} \\; >/dev/null 2>&1"
lineGzip="${timeM} 01 * * * $FIND ${logs_dir} -type f -name \"*log*\" -mtime +7  -exec $GZIP  {} \\; >/dev/null 2>&1"

echo "${lineRm}"
echo "${lineGzip}"
case "${UNAME}" in
AIX)
    (crontab -l 2>/dev/null; echo "${lineRm}" ) | crontab
    (crontab -l 2>/dev/null; echo "${lineGzip}" ) | crontab
    # To remove an item from cron (in this example any lines that match "echo test >> /tmp/testing")
    # crontab -l | sed '\!echo test >> /tmp/testing!d' | crontab
    ;;
*)
    (crontab -l 2>/dev/null; echo "${lineRm}" ) | crontab -
    (crontab -l 2>/dev/null; echo "${lineGzip}" ) | crontab -
    ;;
esac
}
