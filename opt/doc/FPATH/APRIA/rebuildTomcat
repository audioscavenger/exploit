rebuildTomcat() {
#@(t)  |UNAME |out|mod|set|sys|net|app|mis| description                                                                                        |
#@(p)  |*     | x | x |   |   |   | x | x | APRIA: rebuild a TOMCAT tarball on adm-unx-nimpri                                                  |
local productName=tomcat
sync

[ "${HOSTNAME}" != "adm-unx-nimpri" ] && echo2 "ERROR: rebuildTomcat : ONLY on adm-unx-nimpri" && return 99
(( $# < 1 )) && echo2 "usage: rebuildTomcat <tomcat-version.UNAME.KERNELV.tgz>" && ls -1 ${productName}-[6789].0.*.all.all.tgz && return 99

cd ${mainRepoDir}/apache
! lsgroup tomcat >/dev/null && ERROR lsgroup tomcat 1
! lsuser tomcat >/dev/null && ERROR lsuser tomcat 1

tgzPackage="$1"
dirVersion=$(basename $(${tar} ztvf "${tgzPackage}" | ${awk} 'NR == 1 {print $NF}'))
productVersion=${dirVersion#${productName}-}
mainVersion=${productVersion:0:3}
productConfDir=${productName}-${mainVersion}.conf
[ ! -d "./${productConfDir}" ] && ERROR exist_rep "${productConfDir}" 0 && return 1
[ -d "${dirVersion}" ] && rm -rf ${dirVersion}
$Echo ${y} ${FUNCNAME} "CHECKS" "$PWD" OK

${tar} zxf "${tgzPackage}"
(( $? != 0 )) && $Echo ${RED} ${FUNCNAME} "UNZIP" "${tar} zxf ${tgzPackage}" KO && return 1
$Echo ${g} ${FUNCNAME} "UNZIP" "${tar} zxf ${tgzPackage}" OK

cp -rp ./${productConfDir}/* ./${dirVersion}/
chown -Rh tomcat:tomcat ${dirVersion}/*
$Echo ${g} ${FUNCNAME} "COPY" "./${productConfDir}/* /${dirVersion}/" OK

${tar} zcf "${tgzPackage}" ${dirVersion}
(( $? != 0 )) && $Echo ${RED} ${FUNCNAME} "ZIP" "${tar} zcf ${tgzPackage}" KO && return 2
$Echo ${g} ${FUNCNAME} "ZIP" "${tar} zcf ${tgzPackage}" OK

rm -rf ${dirVersion}
$Echo ${g} ${FUNCNAME} "CLEANING" "rm -rf ${dirVersion}" OK

sync
echoHS "${FUNCNAME} ${tgzPackage} OK"
}
