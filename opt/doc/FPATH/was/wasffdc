wasffdc() {
(($# < 1)) && echo2 -e "${C}${FUNCNAME} ${c}< <WAS_SERVER> [last*|-1*|-2|..] ${W}|${c} <ffdc.txt> >\n" && showLocalServers && return 99
[ -z "${wasVersion}" ] && ERROR var wasVersion 0 && return 1

local file ffdcFiles whichOne total WAS_SERVER logsDir nbFFDC

# INFO: WOAAAAAA a directory is like a non empty file !!!!!!!!!!!
if [ ! -d "$1" -a -s "$1" ]; then
  file="$1"
  
  if (head -1 "${file}" | grep -q "FFDC Exception:"); then
    waslog "${file}" | head -4
  else
    nbFFDC=$(grep -c "FFDC Incident emitted on" "${file}")
    (( nbFFDC == 0 )) && echo2 "NO FFDC detected in ${file}" && return 0

    ffdcFiles=$(grep -o "FFDC Incident emitted on [[:graph:]]*" "${file}" | ${awk} '{print $NF}')
    echo "${M}${nbFFDC} ${m}FFDC detected in file ${g}${file}:${END}"
    for ffdcFile in ${ffdcFiles}; do
      [ -s "${ffdcFile}" ] && ${print} "${m}" || ${print} "${N}"
      echo "${ffdcFile}"
    done
  fi
else
  WAS_SERVER=$1
  ! (showLocalServers ${WAS_SERVER}) && echo2 "ERROR: server ${WAS_SERVER} doesn't exist locally ! Use showLocalServers to get the list." && return 3
  [ "${WAS_SERVER}" == "dmgr" ] && logsDir=${wasDmgrLogsDir} || logsDir=${wasNodeLogsDir}
  
  case "$2" in
  last|1|-1) whichOne=-1 ;;
  -[1-9]*)   whichOne=$2 ;;
  [1-9]*)    whichOne=-$2 ;;
  *)         whichOne=-1 ;;
  esac

  total=$(command ls -rt ${logsDir}/ffdc/${WAS_SERVER}_*.txt 2>/dev/null | wc -l | tr -d " ")
  ((total == 0)) && echo2 "${FUNCNAME}: no ffdc files for ${WAS_SERVER}" && return 4
  [ -z "$2" ] && command ls -rt ${logsDir}/ffdc/${WAS_SERVER}_*.txt

  # Okay some ffdc files exists, lets get & show the good one:
  file=${file:-$(command ls -rt ${logsDir}/ffdc/${WAS_SERVER}_*.txt 2>/dev/null | tail ${whichOne} | head -1)}
  ${print} "\n${M}file %d/%d : ${m}%s${END}\n" "${whichOne}" "${total}" "${file}"

  waslog "${file}" | head -4
fi
}
