#@(t)  |UNAME |out|mod|set|sys|net|app|mis| description                                                                                        |
#@(p)  |*     | x |   |   |   |   | x |   | show RUNNING Subsonic instances                                                                    |
[ "${Echo}" = "NOEcho" ] && return 0
typeset processFound color user pid ppid nbThreads threads colon ETIME realProcess parameters process2show SHOW_REAL_PROCESS
SHOW_REAL_PROCESS=false
processFound=1
color=${C}
[ "x$1" = "x-f" ] && SHOW_REAL_PROCESS=true

# ps -${Pseo}:
# USER       PID  PPID CPU %CPU     ELAPSED TT           TIME COMMAND
# nobody   24255     1   -  0.4 13-11:11:04 ?        01:35:25 /raid/data/module/OracleJRE8/system/jre/bin/java ...
psef subsonic |\
while read user pid ppid CPU PCPU ETIME TT TIME realProcess parameters; do
  ETIME="$(printf "%12s" $ETIME)"
  ! $SHOW_REAL_PROCESS && process2show=${realProcess##*/} || process2show=${realProcess}
  $Echo ${color} "Subsonic $(getSubsonicVersion $realProcess 2>/dev/null)" "$user $pid $ppid $PCPU $threads" "$ETIME $process2show $parameters" START
  processFound=0
done
# this way, u get bash errors when launching a new shell:
# done< <(aoeps -l | ${DECOLORIZE})

return ${processFound}
