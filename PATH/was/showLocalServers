#@(t)  |UNAME |out|mod|set|sys|net|app|mis| description                                                                                        |
#@(p)  |*     | x |   |   |   |   | x |   | shows locally installed IHS and APP servers from the current cell                                  |
[ -z "${wasVersion}" ] && ERROR var wasVersion 0 && return 99
typeset lastLocalServerNode color STATUS serverType serverTypes TMP log nbLines nbWARN nbERROR nbFATAL nbFFDC
# wasLocalServerTuples=prd-unx-web001IHSNode:webserverAcamProd:WEB_SERVER ..
serverTypes=$*
TMP=$(mktemp -t ${FUNCNAME}.XXXXX)
(( BASH_VERSINFO > 2 )) && trap '$Debug && $TTY && echo TMP=${TMP} || rm -f ${TMP}' RETURN

[ -z "${serverTypes}" ] && printf "${w}${SMUL}%-34s %7s ${nn[1]}%6s ${y}${SMUL}%5s ${r}${SMUL}%5s ${m}${SMUL}%5s ${M}${SMUL}%5s${END}\n" "localServerName" "STATUS" "Lines" "WARN" "ERROR" "FATAL" "FFDC"
 
ps -${Pseo} >${TMP}
for localServerTuple in ${wasLocalServerTuples}; do
  # KSH88 alternative 'while read' solution :
  # echo $localServerTuple | tr ':' ' ' |
  while read localServerNode localServerName localServerType; do
    if [ -z "${serverTypes}" ]; then
      [ "${lastLocalServerNode}" != "${localServerNode}" ] && printf "${C}${SMUL}${localServerNode} :${END}\n" && lastLocalServerNode=${localServerNode}
      grep -wq "${localServerName}" ${TMP} && STATUS=$STARTED || STATUS=$STOPPED
      
      case "${localServerType}" in
      DEPLOYMENT_MANAGER) log=${wasDmgrLogsDir}/${localServerName}/SystemOut.log
                          color=${Y}
                          ;;
      WEB_SERVER)         log=""
                          color=${Y}
                          ;;
      NODE_AGENT)         log=${wasNodeLogsDir}/${localServerName}/SystemOut.log
                          color=${w}
                          ;;
      APPLICATION_SERVER) log=${wasNodeLogsDir}/${localServerName}/SystemOut.log
                          color=${G}
                          ;;
      PROXY_SERVER)       log=""
                          color=${M}
                          ;;
      *)                  log=""
                          printf "${R}  %-32s %7s ${r}(%s)\n" "${localServerName}" "${STATUS}" "${localServerType}"
                          continue
                          ;;
      esac
      
      if [ -s "${log}" ]; then
        nbLines=$(wc -l ${log} 2>/dev/null | awk '{print $1}')
        nbWARN=$(grep -wc WARN ${log} 2>/dev/null)
        nbERROR=$(grep -wc ERROR ${log} 2>/dev/null)
        nbFATAL=$(grep -wc FATAL ${log} 2>/dev/null)
        nbFFDC=$(grep -wc FFDC1003I ${log} 2>/dev/null)
        ! (( nbLines )) && nbLines=
        ! (( nbWARN )) && nbWARN=
        ! (( nbERROR )) && nbERROR=
        ! (( nbFATAL )) && nbFATAL=
        ! (( nbFFDC )) && nbFFDC=
      else
        nbLines=
        nbWARN=
        nbERROR=
        nbFATAL=
        nbFFDC=
      fi
      
      # prints 73 columns + log cut down to (TTY_WIDTH - 73)
      printf "${color}  %-32s %7s ${nn[1]}%6s ${y}%5s ${r}%5s ${m}%5s ${M}%5s ${nn[0]}%s\n" "${localServerName}" "${STATUS}" "${nbLines}" "${nbWARN}" "${nbERROR}" "${nbFATAL}" "${nbFFDC}" "${log:0:$((TTY_WIDTH - 73))}"
      
    else
      for serverType in ${serverTypes}; do
        case "${serverType}" in
        $localServerNode) echo ${localServerName} ;;
        $localServerName) return 0 ;;
        $localServerType) echo ${localServerName} ;;
        esac
      done
      continue
    fi
    
    # BASH & KSH93 while read solution :
  done< <(echo ${localServerTuple} | tr ':' ' ')
done
