#@(t)  |UNAME |out|mod|set|sys|net|app|mis| description                                                                                        |
#@(p)  |*     | x | x |   |   |   | x |   | creates new HTTPServerX instance by guessing number and works only for instanciated IHS            |
[ -z "${wasVersion}" ] && echo2 "ERROR: please set WAS environment before: was <version>" && exit 99
typeset webServerName installType FORCE
FORCE=false

! (( $# )) && echo2 "${C}${FUNCNAME}${c} [-f] <webServerName> [IHS_USER [IHS_GROUP]] ${g8}(will guess HTTPServerX number)${END}" && exit 99

while [ "x${1:0:1}" = "x-" ]; do
  case "x$1" in
  x-f)  FORCE=true ;;
  esac
  shift
done

webServerName=$1
IHS_USER=${2:-${IHS_USER}}
IHS_GROUP=${3:-${IHS_GROUP}}
HTTPServerTemplateName=${HTTPServerTemplateName:-HTTPServer}

[ ! -s "${wasIHSRoot}/uninstall/version.txt" -o ! -s "${wasIHSRoot}/Plugins/uninstall/version.txt" ] && echo2 "ERROR: this function won't work for the current IHS installation type" && exit 99

cd ${wasIHSRoot}
nbCurrentInstances=$(ls -d ${HTTPServerTemplateName}* 2>/dev/null | wc -l)
instanceNum=$(( nbCurrentInstances + 1 ))
instanceName=${HTTPServerTemplateName}${instanceNum}
eval $(grep ^installType= ${wasPLGRoot}/properties/WSCustomConstants.properties)

# grep -r installType ${wasIHSRoot}/Plugins/*
# ${wasIHSRoot}/Plugins/logs/install/log.txt:installType=remote
# ${wasPLGRoot}/properties/WSCustomConstants.properties:installType=remote

if [ ! -d "${wasIHSRoot}/${instanceName}/logs" ]; then
  mkdir ${wasIHSRoot}/${instanceName}
  mkdir ${wasIHSRoot}/${instanceName}/logs
  cp -r ${wasIHSRoot}/htdocs ${wasIHSRoot}/${instanceName}/
  cp -r ${wasIHSRoot}/conf ${wasIHSRoot}/${instanceName}/
  ln -s ${wasIHSRoot}/bin ${wasIHSRoot}/${instanceName}/bin
  ln -s ${wasIHSRoot}/error ${wasIHSRoot}/${instanceName}/error
  ln -s ${wasIHSRoot}/icons ${wasIHSRoot}/${instanceName}/icons
  ln -s ${wasIHSRoot}/modules ${wasIHSRoot}/${instanceName}/modules
  ln -s ${wasIHSRoot}/Plugins ${wasIHSRoot}/${instanceName}/Plugins
  mkdir ${wasIHSRoot}/${instanceName}/conf/ssl
  perl -pi -e "s#/IHS#/IHS/${instanceName}#g" ${wasIHSRoot}/${instanceName}/conf/*
  $Echo ${g} "${FUNCNAME}" "create directory + copy stuff" "${instanceName}" OK
fi

ln -sf ${instanceName} ${webServerName}
mkdir -p ${webServerName}/Plugins/config/${webServerName}
$Echo ${g} "${FUNCNAME}" "link webServerName to instance" "${webServerName} -> ${instanceName}" OK

cd ${wasIHSRoot}/${instanceName}
ihsHttpCreateExpl
NbKO=$(( NbKO + $? ))

if [ "${installType}" = "remote" ]; then
  ihsAdmCreateExpl
  NbKO=$(( NbKO + $? ))
fi

# rights propagation
chown -Rh ${IHS_USER}:${IHS_GROUP} ${INSTALL_DIR}
chown -Rh ${IHS_USER}:${IHS_GROUP} ${LOGS_DIR}
$Echo ${g} "${FUNCNAME}" "chown ${IHS_USER}:${IHS_GROUP}" "${wasIHSRoot}/${instanceName}" OK

addPurgeLogs2Crontab ${wasIHSRoot}/${instanceName}/logs
$Echo ${g} "${FUNCNAME}" "addPurgeLogs2Crontab" "${wasIHSRoot}/${instanceName}/logs" OK

# ( . ${wasIHSRoot}/${instanceName}/bin/envvars; ${wasIHSRoot}/${instanceName}/bin/htpasswd ${wasIHSRoot}/${instanceName}/conf/admin.passwd admihs )

# configuration file creation
# sed -e "s;{DNS};${DNS};g" -e "s;{URL_FULL};${URL_FULL};g" -e "s;{INSTALL_DIR};${INSTALL_DIR};g" -e "s;{IHS_USER};${IHS_USER};" -e "s;{IHS_GROUP};${IHS_GROUP};" -e "s;{DOCUMENT_ROOT};${DOCUMENT_ROOT};g" -e "s;{DOCUMENT_ROOT_SSL};${DOCUMENT_ROOT_SSL};g" -e "s;{LOGS_DIR};${LOGS_DIR};g" -e "s;{WEBSERVER_DIR};${WEBSERVER_DIR};g" -e "s;{WEBPLUGIN_DIR};${WEBPLUGIN_DIR};g" -e "s;{WEBPLUGIN_CONF_DIR};${WEBPLUGIN_CONF_DIR};g" ${httpd_default} > ${INSTALL_DIR}/conf/httpd.${INSTANCE_NAME}.conf
# [[ $USE_SSL == YES ]] && perl -pi -e "s/#SSL#//g" ${INSTALL_DIR}/conf/httpd.${INSTANCE_NAME}.conf
# sed -e "s;{URL_FULL};${URL_FULL};g" -e "s;{APP_CODE};${APP_CODE};g" -e "s;{INSTANCE_NAME};${INSTANCE_NAME};g" index.html > ${INSTALL_DIR}/htdocs/index.html
# sed -e "s;{URL_FULL};${URL_FULL};g" -e "s;{APP_CODE};${APP_CODE};g" -e "s;{INSTANCE_NAME};${INSTANCE_NAME};g" index_ssl.html > ${INSTALL_DIR}/htdocs/index_ssl.html

echo "----------------------------------------------------------------"
echo " Rapport d'installation de ${webServerName} -> ${instanceName} : CR=$NbKO"
echo " -- INSTALL_DIR       : ${wasIHSRoot}/${instanceName}"
echo " -- LOGS_DIR          : ${wasIHSRoot}/${instanceName}/logs"
echo " -- DOCUMENT_ROOT     : ${wasIHSRoot}/${instanceName}/htdocs"
echo " -- ADMIN Listen to   : $(grep ^Listen ${wasIHSRoot}/${instanceName}/conf/admin.conf|xargs)"
echo " -- HTTP  Listen to   : $(grep ^Listen ${wasIHSRoot}/${instanceName}/conf/httpd.conf|xargs)"
echo "----------------------------------------------------------------"
exit $NbKO
