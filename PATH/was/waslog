#@(t)  |UNAME |out|mod|set|sys|net|app|mis| description                                                                                        |
#@(p)  |*     | x |   |   |   |   | x |   | shows and follow SystemOut log type files with colorized output                                    |
# WAS_SERVER = paramètre
# Was_Server = paramètre VALIDé
# on prend par défaut le premier de la liste TP :
# Was_Server=${WAS_SERVER%%\ *}
typeset Debug=${Debug:-false}
typeset More=${More:-less}
typeset NODATE TAILMODE BPID SEDCOLORIZER EGREP words2grep FORCE _NOARGS WAS_SERVER SystemOut configDir logsDir STEP TOMCAT ALL HELP HELP_NAVIGATION
NODATE=true
TAILMODE=false
# TODO: find a solution for waslog -F to rebuild the SEDCOLORIZER intelligentlty
FORCE=true
EGREP=false
TOMCAT=false
ALL=false
SEDCOLORIZER="/tmp/${FUNCNAME}.${LOGNAME}.sed"
HELP="${G} - SYNTAXE : ${W}waslog ${M}[-f] [-d] [-s] ${C}<filePath | ENV | WAS_SERVER>$END\n
 -                 -f        : ~ tail -f\
 -                 -s        : show time lines\n
 -                 -d        : +debug\n"
HELP_NAVIGATION="${g} - Commands to move inside the LOG (pg) :${END}\n
${g} - ${W}ENTER , d , l = ${n}forward\n
${g} - ${W}-d , -l       = ${n}backward\n
${g} - ${W}XX , \$        = ${n}goto ligne XX / END\n
${g} - ${W}/regexp       = ${n}search ${W}regexp\n
${B}sed -f ${TMPSED} ${SystemOut}\n"



# root@dev-unx-jee001[7]/usr2/produits/websphere7/AppServer/profiles/AppSrv01/logs/apr-test # waslog -f SystemOut.log
 # SystemOut.log : SystemOut.log
 # - Commands to move inside the LOG (pg) :
 # - ENTER , d , l = forward
 # - -d , -l       = backward
 # - XX , $       = goto ligne XX / END
 # - /regexp       = search regexp
 # - La log SystemOut.log est vide !
# bash: ${SystemOutCOLOR}: ambiguous redirect
# pg: -: Invalid wide character
# ************ Start Display Current Environment ************
# WebSphere Platform 7.0.0.27 [ND 7.0.0.27 cf271250.01] running with process name dev-unx-jee001Cell01\dev-unx-jee001Node01\apr-test and process id 18940116
# Host Operating System is AIX, version 6.1


typeset _OPT OPTIND OPTARG OPTIND _NOARGS
while getopts :fFsadg:E:p:tm _OPT 2>/dev/null; do
{
case ${_OPT} in
d)   Debug=true;;
f)   TAILMODE=true;;
F)   FORCE=true;;
s)   NODATE=false;;
a)   ALL=true ;;
g|E) EGREP=true
    # words2grep="${words2grep}${words2grep:+|}${OPTARG}";;   # for perl
    words2grep="${words2grep}${words2grep:+\n}${OPTARG}";;  # for sed
    # words2grep="${words2grep}${words2grep:+|}${OPTARG}";;    # for grep
p)   BPID="${OPTARG}" ;;                        # stop tail -f when BPID dies
t)   TOMCAT=true ;;                             # add/remove colorations for tomcat logs
m)   More="pg -n" ;;                            # force more to be pg coz sometimes less -iFnr sux with badly formated was logs
*)  _NOARGS="${_NOARGS}${_NOARGS+, }-${OPTARG}" ;;
esac
}
done
shift $((${OPTIND:-1} -1))
[ "X${_NOARGS}" != "X" ] && ERROR param "${_NOARGS}"
unset OPTIND _NOARGS

########
# MAIN ###########################################################################
########
if [ ! -t 0 ];then
  SystemOut=/dev/console
  TAILMODE=true
else
  WAS_SERVER=$*
  [ -z "${WAS_SERVER}" ] && ERROR missing WAS_SERVER && echo2 -ne ${HELP} && showLocalServers | grep -iv http && return 99
  SystemOut="${WAS_SERVER}"
  # 1) try to find using wasNodeLogsDir path
  [ ! -f "${SystemOut}" ] && SystemOut="${wasNodeLogsDir}/${WAS_SERVER}/SystemOut.log" || unset WAS_SERVER
  # 2) try to find using wasDmgrDir path
  [ ! -f "${SystemOut}" ] && SystemOut="${wasDmgrLogsDir}/${WAS_SERVER}/SystemOut.log"
  # 3) try to find in the profile dir from the launched process
  if [ ! -f "${SystemOut}" ]; then
    if [ ! -d "${wasProfDir}" ]; then
      typeset configDir=$(ps -${Pseo} | grep -w "${WAS_SERVER}" | /bin/egrep -v "${FUNCNAME} | /bin/grep" | awk '{}; END {print $(NF-3)}')
      typeset logsDir=${configDir%\/*}/logs
      SystemOut="${logsDir}/${WAS_SERVER}/SystemOut.log"
    fi
  fi
  # 4) try to choose manually from ${wasLogsDir}
  if [ ! -f "${SystemOut}" ]; then
    unset WAS_SERVER
    typeset nb=$(ls -d ${wasLogsDir}/* | wc -l)
    if ((nb > 1))
    then
      printf "${Y} WAS_SERVER ambiguous ! Choose among : ${y}\n\n"
      ls -d ${wasLogsDir}/* | awk '{FS="/";print $NF}'
      while [ -z "${WAS_SERVER}" ];
      do
        printf "\n ${m}Choice ? .........${END} "; read WAS_SERVER
        SystemOut="${wasLogsDir}/${WAS_SERVER}/SystemOut.log"
        [ ! -f "${SystemOut}" ] && unset WAS_SERVER && echo ${R}"NEIN !"${END}
      done
    fi
  fi
  [ ! -s "${SystemOut}" ] && ! $TAILMODE && echo $RED" ${WAS_SERVER} : ${SystemOut} empty ... tailing -f it !" && TAILMODE=true
fi
[ ! -e "${SystemOut}" ] && echo2 $RED" - Impossible de trouver La log SystemOut !" && showLocalServers | egrep -iv "http|web" && return 99
echo "${SystemOut}" | grep -q catalina && TOMCAT=true

if ([ ! -s "${SEDCOLORIZER}" ] || $FORCE); then
  rm -f ${SEDCOLORIZER}
  waslog_BUILD_SED ${SEDCOLORIZER}
  $NODATE && waslog_REMOVE_DATE_SED ${SEDCOLORIZER}
  $TOMCAT && waslog_TOMCAT ${SEDCOLORIZER}
  $ALL && waslog_BUILD_SHADE ${SEDCOLORIZER} || waslog_BUILD_HIDE ${SEDCOLORIZER}
  type -p waslog_BUILD_SED_${ENTITY} && waslog_BUILD_SED_${ENTITY} ${SEDCOLORIZER}
fi
$EGREP && for regexp in $(echo ${words2grep}); do echo "s/${regexp}/${r}${RY}&${END}/g" >>${TMPSED};done

if [ ! -t 0 ]; then
  # with this trick we can pipe a tail -f to waslog !!!
  sed -f ${SEDCOLORIZER}
elif $TAILMODE; then
  [ -z "${BPID}" ] && tail -f ${SystemOut} | sed -f ${SEDCOLORIZER} || tail --pid=${BPID} -f ${SystemOut} | sed -f ${SEDCOLORIZER}
# elif $EGREP; then
  # STEP=4
  # nice but useless: doesn't work well when grepped lines follow each other
  # egrep -w -A${STEP} -B${STEP} "${words2grep}" ${SystemOut} | awk -v STEP=${STEP} -v words2grep="${words2grep}" 'BEGIN{dark=235;white=255;num=dark;n=0;step=sprintf("%d",(white-dark)/STEP)}; {if (n == 0) {going="up";num=dark}; if (n == STEP && $0 !~ /"FFDC Incident emitted on"/) {going="down";num=white}; printf "%s %s %s \033[38;5;%sm %s\n",step,n,num,num,$0; if (going == "up") {n++;num+=step} else {n--;num-=step}}'
  # nice as well but useless as well
  # egrep -w -B${STEP} "${words2grep}" ${SystemOut} | awk -v STEP=${STEP} -v words2grep="${words2grep}" 'BEGIN{dark=235;white=255;num=dark;n=0;step=sprintf("%d",(white-dark)/STEP)}; {if ($0 == "--") {n=0;continue}; if (n == 0) {num=dark}; if (n >= STEP) {num=white}; printf "%s %s %s \033[38;5;%sm %s\n",n,step,num,num,$0; n++; num+=step}'
else
  echo "${G}${WAS_SERVER}${WAS_SERVER:+:}${g} ${SystemOut}${END}"
  # print infos on how to navigate with pg, if less is not present (which means 'more' is an alias to 'pg -n' on AIX)
  (( LESS_IS_MORE != 1 )) && clear && echo -ne ${HELP_NAVIGATION} && PAUSE
  # pg -f is needed if you're not working under screen ! And remember that 'more' is an alias to 'less' (or 'pg -n' on AIX)
  [ -z "$STY" ] && typeset pgOpt=f
  sed -f ${SEDCOLORIZER} ${SystemOut} | ${More} -${pgOpt}
fi
