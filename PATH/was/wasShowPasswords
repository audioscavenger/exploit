#@(t)  |UNAME |out|mod|set|sys|net|app|mis| description                                                                                        |
#@(p)  |*     | x |   |   |   |   | x |   | print all passwords from the current cell, -s will decode them as well                             |
[ -z "${wasVersion}" ] && ERROR var wasVersion 0 && return 99
! [ "${cellName}" ] && ERROR var cellName 0 && return 1
! [ "${wasLocalCellsPath}" ] && ERROR var wasLocalCellsPath 0 && return 2
[ ! -d "${wasLocalCellsPath}" ] && ERROR exist_rep "${wasLocalCellsPath}" 0 && return 3

local DECODE decode serverNode serverName serverType centralizedInstallXml securityXml serverTypes appServerXml webServerXml
serverTypes="DEPLOYMENT_MANAGER NODE_AGENT APPLICATION_SERVER WEB_SERVER"
DECODE=false

[ "x$1" = "x-d" ] && local Debug=true && local debug="-d" && shift
[ "x$1" = "x-s" ] && DECODE=true && shift
$DECODE && decode="-x waspass.pl -a password"

# <installTargets hostname username password>
centralizedInstallXml="${wasLocalCellsPath}/${cellName}/centralizedinstall.xml"
$Debug && echo2 "${m}centralizedInstallXml=${centralizedInstallXml}${END}"
$Debug && echo2 "${m}xml_read $debug $decode ${centralizedInstallXml} installTargets hostname username password${END}"
xml_read $debug $decode ${centralizedInstallXml} installTargets hostname username password

# <keyStores> name password location
# <authDataEntries alias userId password description>
securityXml="${wasLocalCellsPath}/${cellName}/security.xml"
$Debug && echo2 "${m}securityXml=${securityXml}${END}"
$Debug && echo2 "${m}xml_read $debug $decode ${securityXml} authDataEntries alias userId password description${END}"
xml_read $debug $decode ${securityXml} authDataEntries alias userId password description

# wasRemoteServerTuples can be used only on a dmgr
for serverTuple in ${wasLocalServerTuples} ${wasDmgrDir:+${wasRemoteServerTuples}}; do
  while read serverNode serverName serverType; do
    case "${serverType}" in
    # <sessionDatabasePersistence userId password>
    APPLICATION_SERVER)
      appServerXml="${wasLocalCellsPath}/${cellName}/nodes/${serverNode}/servers/${serverName}/server.xml"
      $Debug && echo2 "${m}appServerXml=${appServerXml}${END}"
      $Debug && echo2 "${m}xml_read $debug $decode ${appServerXml} sessionDatabasePersistence userId password${END}"
      xml_read $debug $decode ${appServerXml} sessionDatabasePersistence userId password
      ;;
    # <adminServerAuthentication userid password>
    WEB_SERVER)
      webServerXml="${wasLocalCellsPath}/${cellName}/nodes/${serverNode}/servers/${serverName}/server.xml"
      $Debug && echo2 "webServerXml=${webServerXml}${END}"
      $Debug && echo2 "${m}xml_read $debug $decode ${webServerXml} adminServerAuthentication userid password${END}"
      xml_read $debug $decode ${webServerXml} adminServerAuthentication userid password
      ;;
    esac
    
  done< <(echo ${serverTuple} | tr ':' ' ')
done

