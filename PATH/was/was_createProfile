#@(t)  |UNAME |out|mod|set|sys|net|app|mis| description                                                                                        |
#@(p)  |*     | x | x |   |   |   | x |   | creates a Websphere ND profile using templates TODO: check if patterner.awk really needs export var|
[ -z "${wasVersion}" ] && echo2 "error: \${wasVersion} is absent, please load WAS environnment first" && return 99
! [ "${BASH_VERSION}" ] && echo2 "THIS SCRIPT WORKS ONLY WITH BASH 2+" && sleep 5 && return 99
[ ! -d "${wasWASRoot}" ] && echo2 "error: WAS is NOT installed" && return 99

if (( $# < 1 )); then
  echo2 "usage: ${C}${FUNCNAME} ${C}<-h <dmgrHost> <-P dmgrAdminPassword> ${c}[-option [value]]${END}"
  echo2 "       ${n}${FUNCNAME} ${C}-h <dmgrHost>${END}"
  echo2 "       ${n}${FUNCNAME} ${C}-P dmgrAdminPassword${END}"
  echo2 "       ${n}${FUNCNAME}${c} -d${w} (Debug)${END}"
  echo2 "       ${n}${FUNCNAME}${c} -p <dmgrPort> (${wasDmgrPort}*)${END}"
  echo2 "       ${n}${FUNCNAME}${c} -f${w} tail -f log${END}"
  echo2 "       ${n}${FUNCNAME}${c} -t <standard*|production|development>${END}"
  echo2 "       ${n}${FUNCNAME}${c} -U dmgrAdminUserName (${wasDmgrAdminUserName}*)${END}"
  echo2 "       ${n}${FUNCNAME}${c} -n <profileName> (${wasProfileName}*)${END}"
  echo2
  return 99
fi

# most of the default values are set by ${DIREXPLOIT}/etc/${ENTITY}/profile.${ENTITY}.sh
dmgrHost=
dmgrPort=${wasDmgrPort}
dmgrAdminUserName="${wasDmgrAdminUserName}"
dmgrAdminPassword="${wasDmgrAdminPassword}"
profileName="${wasProfileName}"
federateLater=true
applyPerfTuningSetting=standard
responsefileTemplate="${wasResponsefilePath}/${wasVersion}/WAS/manageprofiles.node.${ENTITY}.template"
typeset TAIL

# getopts:
while getopts :h:P:dpft:U: _OPT 2>/dev/null
do
{
  case ${_OPT} in
    h) dmgrHost="$(getDNS ${OPTARG})" ;;
    P) dmgrAdminPassword="${OPTARG}" ;;
    d) typeset Debug=true ;;
    p) dmgrPort="${OPTARG}" ;;
    f) TAIL=true ;;
    t) applyPerfTuningSetting="production" ;;
    U) dmgrAdminUserName="${OPTARG}" ;;
    n) profileName="${OPTARG}" ;;
    *)  _NOARGS="${_NOARGS}${_NOARGS+, }-${OPTARG}" ;;
  esac
}
done
shift $((OPTIND - 1))
unset _OPT OPTARG OPTIND
[ "X${_NOARGS}" != "X" ] && ERROR param "${_NOARGS}"

[ -z "${dmgrHost}" ] && ERROR missing "-h dmgrHost" 0 && return 1
[ -z "${dmgrAdminPassword}" ] && ERROR missing "-P dmgrAdminPassword" 0 && return 2
[ ! -s "${responsefileTemplate}" ] && ERROR exist "${responsefileTemplate}" 0 && return 3
! netcatt ${dmgrHost} ${dmgrPort} && ERROR firewall "open port from ${HOSTNAME} -> ${dmgrHost}:${dmgrPort}" 0 && return 4

export dmgrHost dmgrPort dmgrAdminUserName dmgrAdminPassword profileName federateLater applyPerfTuningSetting 
responsefileLocal=$(basename ${responsefileTemplate})
responsefileLocal="/tmp/${responsefileLocal%\.*}.${HOSTNAME}.txt"
awk -f ${patterner} ${responsefileTemplate} >${responsefileLocal}
Echo ${c} DATE "CREATE PROFILE WAS ${wasVersion} ${profileName}" "$(grep profilePath= ${responsefileLocal})" OK

echo "${Y}${wasWASRoot}/bin/manageprofiles.sh -response ${responsefileLocal} &${END}"
${wasWASRoot}/bin/manageprofiles.sh -response ${responsefileLocal} &

if $TAIL; then
  # WARNING! works only with GNU tail :
  echo2 "${c}tail --pid=$BPID -n +1 -f ${wasWASRoot}/logs/manageprofiles/response.log${END}"
  echo2 "${C}(CTRL+C to stop)${END}"
  echo2 ""
  while $(ps -p $BPID >/dev/null); do
    sleep 2
    [ -f "${wasWASRoot}/logs/manageprofiles/response.log" ] && tail --pid=$BPID -n +1 -f ${wasWASRoot}/logs/manageprofiles/response.log | waslog_xml
    echo
  done
fi

wait $BPID
CR=$?
Echo ${g} DATE "manageprofiles.sh -response" "${responsefileLocal}" $CR

was reload
if [ -d "${wasNodeDir}" ]; then
  if $federateLater; then
    perl -pi -e "s/=180/=666/g" ${wasNodeDir}/properties/*.prop*
    ${wasNodeDir}/bin/addNode.sh ${dmgrHost} ${dmgrPort} -conntype ${wasDmgrConnType} -username "${dmgrAdminUserName}" -password "${dmgrAdminPassword}" -javaoption "-Xmx512m" &
    BPID=$!
    tail --pid=$BPID -n +1 -f ${wasNodeDir}/logs/addNode.log
    echo
  fi
else
  Echo ${r} DATE "manageprofiles.sh -response" "${responsefileLocal}" KO
  echo2 "Check the log: ${wasWASRoot}/logs/manageprofiles/response.log"
  echo2 "then rerun the federation process:"
  echo2 "${c}${wasNodeDir}/bin/addNode.sh ${dmgrHost} ${dmgrPort} -conntype ${wasDmgrConnType} -username \"${dmgrAdminUserName}\" -password \"${dmgrAdminPassword}\" -javaoption \"-Xmx512m\" &${END}"
  $Debug || unset dmgrHost dmgrPort dmgrAdminUserName dmgrAdminPassword profileName federateLater applyPerfTuningSetting 
  return 3
fi

was reload
[ -d "${wasDmgrConfigPath}" ] && Echo ${g} INSTCONFSUCCESS "FEDERATION from ${profileName}" "${HOSTNAME} -> ${dmgrHost}:${dmgrPort}" OK || Echo ${y} WARN "FEDERATION from ${profileName}" "${HOSTNAME} -> ${dmgrHost}:${dmgrPort}" WARN

unset dmgrHost dmgrPort dmgrAdminUserName dmgrAdminPassword profileName federateLater applyPerfTuningSetting 
