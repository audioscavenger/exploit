#@(t)  |UNAME |out|mod|set|sys|net|app|mis| description                                                                                        |
#@(p)  |*     | x | x |   |   |   | x |   | scans httpd logs for banned IP upon scam wordlist, then update mainIpBanList file                  |

local TMP ADD_SCAMMERS DISPLAY_FILES logsDir regexps newIpBanListLines mainIpBanListLines newMainIpBanListLines mainRewriteDenyIpListLines newPotentialThreats md51 md52
TMP=/tmp/analyzeHttpdBanList.$RANDOM.tmp
DISPLAY_FILES=false
ADD_SCAMMERS=false

# on Sat, 27 Sep 2014 22:30:21 +0100 Last 10days Blacklist IPs
###############################################################################
# LIVE BLACKLIST IPv4/IPv6 ADDRESSES DATABASE
# URL: http://www.myip.ms/browse/blacklist
# Copyright 2014, Myip.ms
#
# File Format: deny from ..IPAddress.. (compatible with .htaccess)
#
# Notes for .htaccess:
# Add/Replace Blacklist IPs to .htaccess manually
# or use_
# Free PHP Script for your Website -
# Auto Download Latest Blacklist IP List to your website .htaccess file -
# url: http://myip.ms/download/reports/13/previewName/php_autoupdate.zip_>______>_________>_____>________>______>_______
###############################################################################
#
#  Myip.ms Blacklist IPs in this List: 3,731 ip (17 September 2014 - 27 September 2014)
#

local HELP="${C}${FUNCNAME}${c} [-hf] <logsDir> [mainRewriteDeny] [mainIpBanList] [filteredScamList]${END}\n"
! (($#)) && echo2 "${HELP}" && return 99

[ "x$1" == "x-h" ] && DISPLAY_FILES=true && shift
[ "x$1" == "x-f" ] && ADD_SCAMMERS=true && shift
logsDir="$1"
# http://httpd.apache.org/docs/2.4/rewrite/access.html#host-deny
mainRewriteDeny="${mainRewriteDeny:-$2}"
mainIpBanList="${mainIpBanList:-$3}"
filteredScamList="${filteredScamList:-$4}"

# [ -s "${mainRewriteDeny}" ] && echo "mainRewriteDeny=${mainRewriteDeny} ${mainRewriteDeny:+${g8}($(awk '/^Require not ip/ || /^deny from/' ${mainRewriteDeny} | wc -l) lines)${END}}" || echo "mainRewriteDeny=${mainRewriteDeny:-NOT FOUND}"
[ -s "${mainRewriteDeny}" ] && echo "mainRewriteDeny=${mainRewriteDeny} ${mainRewriteDeny:+${g8}($(wc -l "${mainRewriteDeny}" | awk '{print $1}') lines)${END}}" || echo "mainRewriteDeny=${mainRewriteDeny:-NOT FOUND}"
[ -s "${mainIpBanList}" ] && echo "mainIpBanList=${mainIpBanList} ${mainIpBanList:+${g8}($(wc -l ${mainIpBanList} | awk '{print $1}') lines)${END}}" || echo "mainIpBanList=${mainIpBanList:-NOT FOUND}"
[ -s "${filteredScamList}" ] && echo "filteredScamList=${filteredScamList} ${filteredScamList:+${g8}($(wc -l ${filteredScamList} | awk '{print $1}') lines)${END}}" || echo "filteredScamList=${filteredScamList:-NOT FOUND}"
echo "------------------ : -----------------"
$DISPLAY_FILES && return 0

[ -z "${logsDir}" ] && ERROR param "logsDir" 0 && return 1
[ ! -d "${logsDir}" ] && ERROR exist_rep "${logsDir}" 0 && return 2
[ -z "${mainRewriteDeny}" ] && ERROR missing "mainRewriteDeny" 0 && return 3
[ -z "${mainIpBanList}" ] && ERROR missing "mainIpBanList" 0 && return 4
[ -z "${filteredScamList}" ] && ERROR missing "filteredScamList" 0 && return 5

setDate
regexps="w00tw00t|romanian|blackhats|nixipdb|yahoodns|bitrix|MyAdmin|administrator|test-cgi|/bin/bash |wget http|/echo |gotoip4|CONNECT mx|\\x[0-9][0-9]|\\x[a-z][0-9]|\\x[0-9][a-z]"

! ls ${logsDir}/*access* >/dev/null 2>&1 && ERROR exist "${logsDir}/*access*" 0 && return 4

egrep -i -- "${regexps}" ${logsDir}/*access* | awk '$4 ~ /[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}/ && $4 != /192.168.0.1/ && $4 != /127.0.0.1/ {print $4}' >${TMP}
newIpBanListLines=$(wc -l ${TMP} | awk '{print $1}')
echo "Detected access IPs: $newIpBanListLines"

if [ -s "${mainIpBanList}" ]; then
  mainIpBanListLines=$(wc -l "${mainIpBanList}" | awk '{print $1}')
  echo "current IPs to ban : $mainIpBanListLines"
  cat "${mainIpBanList}" >>${TMP} && cp "${mainIpBanList}" "${mainIpBanList}.$DATE"
fi

if [ -s "${mainRewriteDeny}" ]; then
  # mainRewriteDenyIpListLines=$(egrep "^Require not ip|^deny from" "${mainRewriteDeny}" | wc -l)
  mainRewriteDenyIpListLines=$(wc -l "${mainRewriteDeny}" | awk '{print $1}')
  echo "current denied IPs : $mainRewriteDenyIpListLines"
  # awk '/^Require not ip/ || /^deny from/ {print $NF}' "${mainRewriteDeny}" >>${TMP}
  awk '!/^#/ {print $1}' "${mainRewriteDeny}" >>${TMP}
fi

if [ -s "${TMP}" ]; then
  sort -n ${TMP} | uniq >"${mainIpBanList}"
  newMainIpBanListLines=$(wc -l "${mainIpBanList}" | awk '{print $1}')
  echo "banned IPs added   : +$((newMainIpBanListLines - mainIpBanListLines))"
  echo "banned IPs total   : $newMainIpBanListLines"
fi

if [ -n "${filteredScamList}" ]; then
  echo "------------------ : -----------------"
  echo "filteredScamList   : $filteredScamList"
  awk '/ 404 / && !/192.168.0.1/ && !/127.0.0.1/ && !/CV/ && !/favicon/ && !/cameroon/ && !/subsonic/ {$1="";$2="";$3="";$NF="";$(NF-1)="";$(NF-2)="";print}' ${logsDir}/*access* | sort -n | uniq >${TMP}
  newPotentialThreats=$(wc -l ${TMP} | awk '{print $1}')
  if (( newPotentialThreats > 0 )); then
    [ -s "${filteredScamList}" ] && cat "${filteredScamList}" >>${TMP} && cp "${filteredScamList}" "${filteredScamList}.$DATE"
    awk '/[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}/' ${TMP} | sort -n | uniq >"${filteredScamList}"
    if ! $ADD_SCAMMERS; then
      echo "newPotentialThreats: +${newPotentialThreats} - check ${filteredScamList} !"
    else
      echo "newPotentialThreats: +${newPotentialThreats}... analysis:"
      mainIpBanListLines=$(wc -l "${mainIpBanList}" | awk '{print $1}')
      cp "${mainIpBanList}" ${TMP}
      awk '{print $1}' "${filteredScamList}" >>${TMP}
      sort -n ${TMP} | uniq >"${mainIpBanList}"
      newMainIpBanListLines=$(wc -l "${mainIpBanList}" | awk '{print $1}')
      echo "scam IPs added     : +$((newMainIpBanListLines - mainIpBanListLines))"
      echo "banned IPs total   : $newMainIpBanListLines"
    fi
  fi
fi

read md51 md52 <<<$(md5sum "${mainIpBanList}" "${mainIpBanList}.$DATE" | awk '{print $1}'); [ "$md51" == "$md52" ] && rm "${mainIpBanList}.$DATE"
read md51 md52 <<<$(md5sum "${filteredScamList}" "${filteredScamList}.$DATE" | awk '{print $1}'); [ "$md51" == "$md52" ] && rm "${filteredScamList}.$DATE"
rm -f /tmp/analyzeHttpdBanList.*
