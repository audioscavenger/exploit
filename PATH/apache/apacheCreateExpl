#@(t)  |UNAME |out|mod|set|sys|net|app|mis| description                                                                                        |
#@(p)  |*     | x | x |   |   |   | x |   | create HTTPD scripts start/stop/restart/status/test                                                |
(($# < 1)) && echo2 "${C}${FUNCNAME}${c} [-df] [-p <prefix>] [-c <httpdConfFileName>] </apacheInstanceRoot|${PWD}*> [instanceName]${END}" && exit 99
typeset FORCE PREFIX apacheInstanceRoot User Group namevhost port userIsRoot httpdConf confFile rootPorts PidFile
FORCE=false
PREFIX=""
userIsRoot=false
httpdConf=httpd.conf
httpdPid=${httpdConf%\.*}.pid

while [ "x${1:0:1}" = "x-" ]; do
  case "x$1" in
  x-d)  typeset Debug=true ;;
  x-f)  FORCE=true ;;
  x-p)  PREFIX=$2; shift ;;
  x-c)  httpdConf=$2; shift ;;
  esac
  shift
done

[ ! -d "${instancesRootDir}" ] && ERROR var instancesRootDir 0 && exit 1
[ -d "$1" ] && apacheInstanceRoot="$1" || apacheInstanceRoot="${PWD}"
(($# == 2)) && instanceName=$2 || instanceName=${apacheInstanceRoot#${instancesRootDir}/*}

[ ! -d "${apacheInstanceRoot}/bin" ] && ERROR exist_rep "${apacheInstanceRoot}/bin" 0 && exit 1
[ ! -f "${apacheInstanceRoot}/conf/${httpdConf}" ] && ERROR exist "${apacheInstanceRoot}/conf/${httpdConf}" 0 && exit 2
[ ! -s "${apacheInstanceRoot}/conf/${httpdConf}" ] && ERROR empty "${apacheInstanceRoot}/conf/${httpdConf}" 0 && exit 3
[ ! -w "${apacheInstanceRoot}" ] && ERROR rights "${apacheInstanceRoot}" 0 "ECRITURE" && exit 4

User=$(grep -w ^User "${apacheInstanceRoot}/conf/${httpdConf}"); User=${User#* }
Group=$(grep -w ^Group "${apacheInstanceRoot}/conf/${httpdConf}"); Group=${Group#* }
PidFile=$(grep -w ^PidFile "${apacheInstanceRoot}/conf/${httpdConf}"); PidFile=${PidFile#* }
[ -z "${PidFile}" ] && PidFile=${httpdPid}
! lsuser "${User}" >/dev/null && ERROR lsuser "${User}" 0 && echo2 "Vous devez modifier le fichier ${apacheInstanceRoot}/conf/${httpdConf} à la main !" && exit 4
! lsgroup "${Group}" >/dev/null && ERROR lsgroup "${Group}" 0 && echo2 "Vous devez modifier le fichier ${apacheInstanceRoot}/conf/${httpdConf} à la main !" && exit 4
$Debug && echo2 "1) User:Group=${User}:${Group}"

for confFile in $(echo ${apacheInstanceRoot}/conf/${httpdConf}; grep "^\s*Include " ${apacheInstanceRoot}/conf/${httpdConf} 2>/dev/null); do
  rootPorts=$(grep Listen ${confFile} 2>/dev/null | tr ':' ' ' | awk '!/#/ {if ($NF < 1025) {print 0}}')
  test ${rootPorts} && User=root && break
done
$Debug && test ${rootPorts} && echo2 "rootPorts=${rootPorts}" && echo2 "2) User:Group=${User}:${Group}"

mkdir -p ${apacheInstanceRoot}/logs
chmod 2775 ${apacheInstanceRoot}/logs

if [ "${User}" != "root" ]; then
  while read port namevhost; do
    $Debug && echo2 "namevhost:port = $namevhost:$port"
    (( port <= 1024 )) && User=root
  done< <(${apacheInstanceRoot}/bin/apachectl -t -D DUMP_VHOSTS -f ${apacheInstanceRoot}/conf/${httpdConf} 2>&1 | egrep -v "warn|error" | awk '/ port / {print $2,$4}')
  $Debug && echo2 "3) User:Group=${User}:${Group}"
fi

# correctif bug IHS admin: c'est toujours root et point barre.
[ "${PREFIX}" = "adm" ] && User=root

if ($FORCE || [ ! -s "${apacheInstanceRoot}/${PREFIX}start" ]); then
cat > ${apacheInstanceRoot}/${PREFIX}start << EOT
#!/bin/sh
# debug start: -X -e (Debug|Info|Warn|Error)
ORIGIN=localhost
type -p waslog >/dev/null 2>&1 && tail=waslog || tail=tail
[ "x\$1" = "x-f" ] && TAIL=true && shift || TAIL=false
[ -t 0 ] && TTY=true && ORIGIN=\$(who am i 2>/dev/null | awk '{print substr(\$NF,2,(length(\$NF)-2))}') || TTY=false
LOG=${apacheInstanceRoot}/logs/${PREFIX}start.log
\$TTY && echo "${apacheInstanceRoot}/bin/apachectl -k start -f ${apacheInstanceRoot}/conf/${httpdConf} \"\$@\""
printf "[\$(date +'%Y-%m-%d %H:%M:%S')] \$TTY \${LOGNAME} (\${ORIGIN}) start ${instanceName} CR=" >>\${LOG}
if [ "\${LOGNAME}" = "root" ]; then
  su - ${User} -- ${apacheInstanceRoot}/bin/apachectl -k start -f ${apacheInstanceRoot}/conf/${httpdConf} "\$@"
elif [ "\${LOGNAME}" != "${User}" ]; then
  sudo -u ${User} ${apacheInstanceRoot}/bin/apachectl -k start -f ${apacheInstanceRoot}/conf/${httpdConf} "\$@"
else
  ${apacheInstanceRoot}/bin/apachectl -k start -f ${apacheInstanceRoot}/conf/${httpdConf} "\$@"
fi
echo "\$?" >>\${LOG}
\$TTY && tail -1 \${LOG}
\$TTY && \$TAIL && \${tail} -f \$(ls -drt ${apacheInstanceRoot}/logs/*access* | awk '/log/ {}; END {print}') || exit 0
EOT
Echo ${y} DATE "${FUNCNAME}" "${apacheInstanceRoot}/${PREFIX}start" OK
fi



# bash: kill -TERM $(<${apacheInstanceRoot}/logs/${PidFile} 2>/dev/null)
# sh  : kill -TERM $(cat ${apacheInstanceRoot}/logs/${PidFile} 2>/dev/null)
if ($FORCE || [ ! -s "${apacheInstanceRoot}/${PREFIX}stop" ]); then
cat > ${apacheInstanceRoot}/${PREFIX}stop << EOT
#!/bin/sh
ORIGIN=localhost
[ -t 0 ] && TTY=true && ORIGIN=\$(who am i 2>/dev/null | awk '{print substr(\$NF,2,(length(\$NF)-2))}') || TTY=false
PidFile=${apacheInstanceRoot}/logs/${PidFile}
LOG=${apacheInstanceRoot}/logs/${PREFIX}stop.log
stop=stop
((\$# > 0)) && [ "\$1" = "graceful" ] && stop=graceful-stop && shift
\$TTY && echo "${apacheInstanceRoot}/bin/apachectl -k \$stop -f ${apacheInstanceRoot}/conf/${httpdConf} \"\$@\""
printf "[\$(date +'%Y-%m-%d %H:%M:%S')] \$TTY \${LOGNAME} (\${ORIGIN}) \$stop ${instanceName} CR=" >>\${LOG}
if [ "\${LOGNAME}" = "root" ]; then
  su - ${User} -- ${apacheInstanceRoot}/bin/apachectl -k \$stop -f ${apacheInstanceRoot}/conf/${httpdConf} "\$@"
elif [ "\${LOGNAME}" != "${User}" ]; then
  sudo -u ${User} ${apacheInstanceRoot}/bin/apachectl -k \$stop -f ${apacheInstanceRoot}/conf/${httpdConf} "\$@"
else
  ${apacheInstanceRoot}/bin/apachectl -k \$stop -f ${apacheInstanceRoot}/conf/${httpdConf} "\$@"
fi
echo "\$?" >>\${LOG}
[ -s "\${PidFile}" ] && kill -TERM \$(cat \${PidFile} 2>/dev/null) >>\${LOG} 2>&1
\$TTY && tail -1 \${LOG} || exit 0
EOT
Echo ${y} DATE "${FUNCNAME}" "${apacheInstanceRoot}/${PREFIX}stop" OK
fi

if ($FORCE || [ ! -s "${apacheInstanceRoot}/${PREFIX}restart" ]); then
cat > ${apacheInstanceRoot}/${PREFIX}restart << EOT
#!/bin/sh
ORIGIN=localhost
type -p waslog >/dev/null 2>&1 && tail=waslog || tail=tail
[ "x\$1" = "x-f" ] && TAIL=true && shift || TAIL=false
[ -t 0 ] && TTY=true && ORIGIN=\$(who am i 2>/dev/null | awk '{print substr(\$NF,2,(length(\$NF)-2))}') || TTY=false
LOG=${apacheInstanceRoot}/logs/${PREFIX}restart.log
restart=restart
((\$# > 0)) && [ "\$1" = "graceful" ] && restart=graceful && shift
\$TTY && echo "${apacheInstanceRoot}/bin/apachectl -k \$restart -f ${apacheInstanceRoot}/conf/${httpdConf} \"\$@\""
printf "[\$(date +'%Y-%m-%d %H:%M:%S')] \$TTY \${LOGNAME} (\${ORIGIN}) \$restart ${instanceName} CR=" >>\${LOG}
if [ "\${LOGNAME}" = "root" ]; then
  su - ${User} -- ${apacheInstanceRoot}/bin/apachectl -k \$restart -f ${apacheInstanceRoot}/conf/${httpdConf} "\$@"
elif [ "\${LOGNAME}" != "${User}" ]; then
  sudo -u ${User} ${apacheInstanceRoot}/bin/apachectl -k \$restart -f ${apacheInstanceRoot}/conf/${httpdConf} "\$@"
else
  ${apacheInstanceRoot}/bin/apachectl -k \$restart -f ${apacheInstanceRoot}/conf/${httpdConf} "\$@"
fi
echo "\$?" >>\${LOG}
\$TTY && tail -1 \${LOG}
\$TTY && \$TAIL && \${tail} -f \$(ls -drt ${apacheInstanceRoot}/logs/*access* | awk '/log/ {}; END {print}') || exit 0
EOT
Echo ${y} DATE "${FUNCNAME}" "${apacheInstanceRoot}/${PREFIX}restart" OK
fi

if ($FORCE || [ ! -s "${apacheInstanceRoot}/${PREFIX}status" ]); then
cat > ${apacheInstanceRoot}/${PREFIX}status << EOT
#!/bin/sh
ORIGIN=localhost
[ -t 0 ] && TTY=true && ORIGIN=\$(who am i 2>/dev/null | awk '{print substr(\$NF,2,(length(\$NF)-2))}') || TTY=false
PidFile=${apacheInstanceRoot}/logs/${PidFile}
LOG=${apacheInstanceRoot}/logs/${PREFIX}status.log
printf "[\$(date +'%Y-%m-%d %H:%M:%S')] \$TTY \${LOGNAME} (\${ORIGIN}) status ${instanceName} = " >>\${LOG}
if [ -s "\${PidFile}" ]; then
  ps -p \$(cat \${PidFile}) >/dev/null 2>&1 && echo STARTED >>\${LOG} || echo STOPPED >>\${LOG}
else
  (ps -ef | grep httpd | grep -q ${apacheInstanceRoot}) && echo STARTED >>\${LOG} || echo STOPPED >>\${LOG}
fi
\$TTY && tail -1 \${LOG} || exit 0
EOT
Echo ${y} DATE "${FUNCNAME}" "${apacheInstanceRoot}/${PREFIX}status" OK
fi

if ($FORCE || [ ! -s "${apacheInstanceRoot}/${PREFIX}test" ]); then
cat > ${apacheInstanceRoot}/${PREFIX}test << EOT
#!/bin/sh
[ -t 0 ] && TTY=true || TTY=false
${apacheInstanceRoot}/bin/apachectl -t -D DUMP_VHOSTS -f ${apacheInstanceRoot}/conf/${httpdConf} "\$@"
EOT
Echo ${y} DATE "${FUNCNAME}" "${apacheInstanceRoot}/${PREFIX}test" OK
fi

chmod 755 ${apacheInstanceRoot}/${PREFIX}st* ${apacheInstanceRoot}/${PREFIX}test ${apacheInstanceRoot}/${PREFIX}restart
