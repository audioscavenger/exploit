#@(t)  |UNAME |out|mod|set|sys|net|app|mis| description                                                                                        |
#@(p)  |*     | x |   |   |   |   | x |   | returns HTTPD version with PID/path/httpd/httpd.conf                                               |
local PID path httpdConf httpdBinDir processApache httpdProcess dir2Find httpdConfFile
! (($#)) && echo2 "${C}${FUNCNAME}${c} < PID | path | [/path/]httpd | [/path/]httpd.conf >${END}" && return 99
dir2Find=bin
processApache=httpd
launcherApache=apachectl
httpdConfFile=httpd.conf
$GNU_FIND && findParams="-print -quit"
# INFO: emulate GNU "find -print -quit" :
# https://unix.stackexchange.com/questions/62880/how-to-stop-the-find-command-after-first-match
# findParams="-exec bash -c 'printf \"%s\n\" \"$1\"; kill \"\$PPID\"' bash {} \;"

if (($1)) 2>/dev/null; then
  # $1 is a PID
  PID=$1
  httpdConf=$(httpps -l ${PID} | ${DECOLORIZE} | awk 'NR==1 {print $NF}')
  [ ! -f "${httpdConf}" ] && ERROR exist "${httpdConf}" 0 && return 1
  
  httpdBinDir=$(realpath $(dirname ${httpdConf})/../bin)
  [ ! -d "${httpdBinDir}" ] && ERROR missing "${httpdBinDir}" 0 && return 2
  httpdProcess=${httpdBinDir}/${launcherApache}
elif [ -d "$1" ]; then
  # $1 is a directory
  [ "$(basename $1)" == "${dir2Find}" ] && httpdBinDir=$1 || httpdBinDir=$(find -L $1 -type d -name ${dir2Find} ${findParams} | head -n 1)
  [ ! -d "${httpdBinDir}" ] && ERROR exist_rep ${dir2Find} 0 && return 3
  httpdProcess=${httpdBinDir}/${launcherApache}
elif [ -s "$1" -a "${1##*/}" == "${launcherApache}" ]; then
  # $1 is the launcherApache
  httpdProcess=$1
elif [ -s "$1" -a "${1##*/}" == "${processApache}" ]; then
  # $1 is the processApache
  httpdProcess=$(dirname $1)/${launcherApache}
elif [ -s "$1" -a "${1##*/}" == "${httpdConfFile}" ]; then
  # $1 is the httpdConfFile
  httpdProcess=$(realpath $(dirname $1)/../bin/${launcherApache}) || httpdProcess=$(realpath $(dirname $1)/../../sbin/${launcherApache}) || return 4
fi

# Server version: Apache/2.2.22 (Unix)
[ ! -s "${httpdProcess}" ] && ERROR exist "${httpdProcess}" 0 && return 5
${httpdProcess} -V | awk '/Server version:/ {n=gsub("IBM_HTTP_Server","IHS",$3); if (n>0) {IHS=$3;getline;print IHS"/"$3} else {print $3}}'
