# The execute/search bits if the file is a directory or any of the execute/search bits are set 
# in the original (unmodified) mode. In other words, chmod u+X on a file won't set the execute 
# bit; and g+X will only set it if it's already set for the user
(($# < 1)) && echo2 "cleanChmod [-R] <file|dir ..>" && return 99
typeset TMP=$(mktemp -t cleanChmod.XXXXXX)

case ${UNAME} in
# AIX is deactivated; hence, we gotta check the files for scripts, so same rules as Linux apply here.
# AIX)
  # typeset RECURSE=""
  # [ "x$1" == "x-R" ] && RECURSE="-R" && shift
  # chmod -h ${RECURSE} ugo-x,ug+rwX,go+rX,o-w $*
# ;;
*)
  # Linux always follows symlinks. Gotta be very tricky
  if [ "x$1" == "x-R" ]; then
    shift
    for file in $*; do
      if [ -d "$file" ]; then
        find "$file" -type f -ls -exec chmod ugo-x,ug+rwX,go+rX,o-w {} \; | awk '{print $NF}' >>${TMP}
        while read subfile; do
          (file "$subfile" 2>/dev/null|grep "script" >/dev/null) && chmod ug+x "$subfile"
        done <${TMP}
        find "$file" -type d -exec chmod ugo-x,ug+rwXs,go+rX,o-w {} \;
      else
        [ ! -h "$file" ] && (file "$file" 2>/dev/null|grep "script" >/dev/null) && chmod ug+rwX,go+rX,o-w "$file" || chmod ugo-x,ug+rwX,go+rX,o-w "$file"
      fi
    done
  else
    for file in $*; do
      (file "$file" 2>/dev/null|grep "script" >/dev/null) && chmod ug+rwX,go+rX,o-w "$file" || chmod ugo-x,ug+rwX,go+rX,o-w "$file"
    done
  fi
esac
rm -f ${TMP}
