# TODO: dumpe2fs -h /dev/md0
# TODO: egrep Filesystem state:|Mount count:|Maximum mount count:|Check interval:
# Filesystem state:         not clean
# Mount count:              28
# Maximum mount count:      30
# Last checked:             Sat Oct 12 16:40:26 2013
# Check interval:           15552000 (6 months)
# Next check after:         Thu Apr 10 16:40:26 2014

local FS lt eq gt dfmUnit
dfmUnit=m
[ "$1" == "-k" ] && dfmUnit=k && FS=${2:-" "} || FS=${1:-" "}
[ "${UNAME}" == "SunOS" ] && dfmUnit=k && dfmOption=${dfmUnit} || dfmOption=P${dfmUnit}

# INFO case : quoted * is NOT working !
case "${FS}" in
"lt") lt=$2 && FS="/" ;;
"eq") eq=$2 && FS="/" ;;
"gt") gt=$2 && FS="/" ;;
" ")  FS="/" ;;
"/")  FS="/$" ;;
".")  FS="$(df -${dfmUnit} $FS | tail -1 | awk '{print $NF}')$" ;;
*)    [ "${#FS}" -gt "1" -a "${FS%${FS#?}}" == "/" ] && FS="$(df -P $FS | tail -1 | awk '{print $NF}')$" ;;
esac

df -${dfmOption} |\
grep "$FS" |\
sort -k 6 |\
LC_ALL=C awk -v lt="$lt" -v eq="$eq" -v gt="$gt" -v unit=${dfmUnit} 'BEGIN {
  line[0]="Logical_Volume "unit"B_Total "unit"B_Used "unit"B_Free Use Mounted_on";COLOR[0]="{W}";end="{END}"
  i=1;maxLvLength=20;totalSize=0;totalUsed=0;totalFree=0;totalPct=0;nbFS=0
}
function commas(d) {
  # http://www.staff.science.uu.nl/~oostr102/docs/nawk/nawk_65.html
  d = d ""
  gsub(",","",d)
  point = index(d,".") - 1
  if (point < 0) point = length(d)
  while (point > 3) {
    point -= 3
    d = substr(d,1,point)","substr(d,point + 1)
  }
  return d
}
{
  gsub("/dev/","",$1);gsub("%","",$5);pctUsed=$5+0
  if (length($1) > maxLvLength) {maxLvLength=length($1)}
  if (pctUsed < "86" && pctUsed != "100") {COLOR[i]="{w}"}
  if (pctUsed > "85" && pctUsed < "96") {COLOR[i]="{y}"}
  if (pctUsed > "95" && pctUsed <= "99") {COLOR[i]="{r}"}
  if (pctUsed == "100") {COLOR[i]="{k}{RR}"}
  if (lt != "") {if (pctUsed > lt) {next}}
  if (eq != "") {if (pctUsed != eq) {next}}
  if (gt != "") {if (pctUsed < gt) {next}}
  if (match($1, "loop")) {COLOR[i]="{K}"} else {if (match($1, ":")) {COLOR[i]="{B}"} else {if (match($1, "cd")) {COLOR[i]="{K}"} else {totalSize+=$2;totalUsed+=$3;totalFree+=$4;totalPct+=pctUsed;nbFS++}}}
  line[i]=$0;i++
}
END {
  if (i > 1) {
    maxLvLength++
    maxSizeLength=length(totalSize "")+6
    maxUsedLength=length(totalUsed "")+6
    maxFreeLength=length(totalFree "")+6
    if (maxLvLength<14) {maxLvLength=14}
    if (maxSizeLength<8) {maxSizeLength=8}
    if (maxUsedLength<7) {maxUsedLength=7}
    if (maxFreeLength<7) {maxFreeLength=7}
    split(line[0],column," ")
    printf "%s%-"(maxLvLength)"s %"(maxSizeLength)"s %"(maxUsedLength)"s %"(maxFreeLength)"s %3s%% %s%s\n",COLOR[0],column[1],column[2],column[3],column[4],column[5],column[6],end
    for (n=1; n<i; n++) {
    split(line[n],column," ")
    printf "%s%-"(maxLvLength)"s %"(maxSizeLength)"s %"(maxUsedLength)"s %"(maxFreeLength)"s %3d%% %s%s\n",COLOR[n],column[1],commas(sprintf("%.0f",column[2])),commas(sprintf("%.0f",column[3])),commas(sprintf("%.0f",column[4])),column[5],column[6],end
    }
    # INFO: to print correctly these scientific long decimals one have to be tricky : %.0f
    # INFO: earlier use of %'"'"'"(maxSizeLength)"s i wonder why
    printf "{W}%-"(maxLvLength)"s %"(maxSizeLength)"s %"(maxUsedLength)"s %"(maxFreeLength)"s %3d%%",nbFS " FS - Total :",commas(sprintf("%.0f",totalSize)),commas(sprintf("%.0f",totalUsed)),commas(sprintf("%.0f",totalFree)),int(totalPct/nbFS),end
  }
}' |\
${COLORIZE} ${HIGHS} ${LOWS} ${REVLOWS} ${REVHIGHS}
echo "${END}"
