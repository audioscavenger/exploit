(($# == 0)) && echo2 "f2b <me|-ip 1.2.3.4>" && exit 99

unset IP2unban Chains line2unban num2unban

while (($# > 0)); do
  case "x$1" in
    "x--help"|"x-h")  echo2 "f2b <me|ip>" && exit 99 ;;
    "xserver")        IP2unban=$(dig +short txt ch whoami.cloudflare @1.0.0.1 | egrep -o '([0-9]{1,3}\.){3}[0-9]{1,3}') ;;
    "xme")            IP2unban=me ;;
    "x-ip")           IP2unban=$(${2} | egrep -o '([0-9]{1,3}\.){3}[0-9]{1,3}') && shift ;;
    *)                echo2 "f2b <me|ip>" && exit 99 ;;
  esac
  shift
done

if [ "$IP2unban" = "me" ]; then
  # depending on the architecture, those commands will have very different output; who -m --ips returns no IP on ARM for instance
  # who -m --ips | egrep -o '([0-9]{1,3}\.){3}[0-9]{1,3}'
  # this one seems to give the best results:
  IP2unban=$(who | cut -d"(" -f2 |cut -d")" -f1 | egrep -o '([0-9]{1,3}\.){3}[0-9]{1,3}' | head -n 1)
fi

test -n "${line2unban-}" && echo2 error in IP to unban && exit 1

if command -v fail2ban-client &>/dev/null; then
  echo Unbanning $IP2unban from fail2ban system...
  fail2ban-client unban $IP2unban
fi

if (command -v docker &>/dev/null && docker top swag &>/dev/null); then
  echo Unbanning $IP2unban from fail2ban swag...
  docker exec -it swag fail2ban-client unban $IP2unban
fi

# fail2ban unban will cleanup iptables almost instantly but just in case...
if command -v iptables &>/dev/null; then
  echo Unbanning $IP2unban from iptables...
  Chains=$(iptables -L -n | awk '/^Chain / {print $2}')
  for Chain in $Chains; do
    echo Chain $Chain:
    # dig will return a double quoted IP, therefore we need to remove the quotes; not anymore since we use grep -o
    line2unban=$(iptables -L $Chain -n --line-numbers | grep "${IP2unban//\"}")
    test -n "${line2unban-}" && echo2 $line2unban && num2unban=${line2unban%% *} && iptables -D $Chain $num2unban
    unset line2unban
  done
fi
