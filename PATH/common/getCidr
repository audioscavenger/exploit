#!/usr/bin/env bash
# this will resolve an IP to its owner's CIDR and append a file; takes one IP or a file as input

########
# INIT ###########################################################################
########
thisVersion=1.0.0
typeset cidr IP INPUT OUTPUT

# getopts:
typeset _NOARGS _OPT OPTIND
while getopts :i:o: _OPT 2>/dev/null
do
{
  case ${_OPT} in
    i) INPUT="${OPTARG}" ;;
    o) OUTPUT="${OPTARG}" ;;
    *) _NOARGS="${_NOARGS}${_NOARGS+, }-${OPTARG}" ;;
  esac
}
done
shift $((OPTIND - 1))
unset _OPT OPTARG
# [ "X${_NOARGS}" != "X" ] && ERROR param "${_NOARGS}"

typeset IP="$*"

########
# VERIF ###########################################################################
########

# if [ $# -lt 1 -o "X${_NOARGS}" != "X" ]; then
if [ $OPTIND -lt 1 ]; then
  echo2 "\
${C}getCidr ${w}[OPTIONS] ${c}< IP | -i inputfile > ${END}\n\
  -i              input file of IPs \n\
  -o              output file of cidr \n\
"
  exit 99
fi


[ -n "${INPUT}" -a ! -s "${INPUT}" ] && ERROR exist "${INPUT}" 0 && exit 1

########
# MAIN ###########################################################################
########

for ip in $([ -s "$INPUT" ] && cat ${INPUT} || echo $IP); do 
  unset cidr
  cidr=$(whois $ip | awk '/^route:/ {print $2}'); 
  [ -z "$cidr" ] && cidr=$(ipcalc -rn $(whois $ip | awk '/^inetnum:/ {print $2,$3,$4}')|grep -v deaggregate); 
  
  if [ -z "$cidr" ]; then
    echo ERROR: no cidr for $ip
  else
    if [ -n "${OUTPUT}" ]; then
      grep -qw "$cidr" ${OUTPUT} 2>/dev/null && echo ${K}"$ip -> $cidr"${END} || (echo ${g}"$ip -> $cidr"${END} && echo $cidr >>${OUTPUT})
    else
      echo "$ip -> $cidr"
    fi
  fi
  
done

exit 0

