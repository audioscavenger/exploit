#!/usr/bin/env bash
typeset -a FUNCNAME
typeset error param2 CR params
error=${1:-unknown}
param2=${2:-no info}
CR=${3:-0}
# TODO: just for BASH: # [[ $CR != [0-9]* ]] && CR=0 && params="$CR ${@:4}" || params=${@:4}
shift 3 2>/dev/null; [[ $CR != [0-9]* ]] && CR=0 && params="$CR ${@}" || params=${@}

LOGG=${LOGG:-"tee"}
$Debug && debug
case ${error} in
  copy)       Echo ${R} DATE "ERROR ${error}" "IMPOSSIBLE de copier \"${param2}\" !" "${SCRIPT_VERSION}" |${LOGG} ;;
  create_rep) Echo ${R} DATE "ERROR ${error}" "IMPOSSIBLE de creer le repertoire \"${param2}\" !" "${SCRIPT_VERSION}" |${LOGG} ;;
  date)       Echo ${R} DATE "ERROR ${error}" "Mauvaise date en parametre : \"${param2}\" - KO !" "${SCRIPT_VERSION}" |${LOGG} ;;
  delete)     Echo ${R} DATE "ERROR ${error}" "IMPOSSIBLE de supprimer \"${param2}\" !" "${SCRIPT_VERSION}" |${LOGG} ;;
  dmgr)       Echo ${R} DATE "ERROR ${error}" "le DMGR \"${param2}\" n'est pas lance ! Installation Jython impossible !" "${SCRIPT_VERSION}" |${LOGG} ;;
  dns)        Echo ${R} DATE "ERROR ${error}" "DNS \"${param2}\" non trouve !" "${SCRIPT_VERSION}" |${LOGG} ;;
  empty)      Echo ${R} DATE "ERROR ${error}" "fichier \"${param2}\" vide !" "${SCRIPT_VERSION}" |${LOGG} ;;
  exist)      Echo ${R} DATE "ERROR ${error}" "\"${param2}\"" "${SCRIPT_VERSION}" |${LOGG} ;;
  exist_rep)  Echo ${R} DATE "ERROR ${error}" "le repertoire \"${param2}\" n'EXISTE PAS !" "${SCRIPT_VERSION}" |${LOGG} ;;
  exist_user) Echo ${R} DATE "ERROR ${error}" "user \"${param2}\" INEXISTANT !" "${SCRIPT_VERSION}" |${LOGG} ;;
  exist_group) Echo ${R} DATE "ERROR ${error}" "group \"${param2}\" INEXISTANT !" "${SCRIPT_VERSION}" |${LOGG} ;;
  free)       Echo ${R} DATE "ERROR ${error}" "Espace disponible insuffisant sur \"${param2}\" !" "${SCRIPT_VERSION}" |${LOGG} ;;
  link)       Echo ${R} DATE "ERROR ${error}" "IMPOSSIBLE de creer le lien \"${param2}\" !" "${SCRIPT_VERSION}" |${LOGG} ;;
  lsuser)     Echo ${R} DATE "ERROR ${error}" "le user \"${param2}\" n'existe PAS !" "${SCRIPT_VERSION}" |${LOGG} ;;
  lsgroup)    Echo ${R} DATE "ERROR ${error}" "le groupe \"${param2}\" n'existe PAS !" "${SCRIPT_VERSION}" |${LOGG} ;;
  mkdir)      Echo ${R} DATE "ERROR ${error}" "IMPOSSIBLE de creer le repertoire \"${param2}\" !" "${SCRIPT_VERSION}" |${LOGG} ;;
  move)       Echo ${R} DATE "ERROR ${error}" "IMPOSSIBLE de deplacer \"${param2}\" !" "${SCRIPT_VERSION}" |${LOGG} ;;
  number)     Echo ${R} DATE "ERROR ${error}" "le nombre \"${param2}\" n'est pas compose de chiffres !" "${SCRIPT_VERSION}" |${LOGG} ;;
  nbparam)    Echo ${R} DATE "ERROR ${error}" "Nombre de parametres INCORRECT ! Il en faut \"${param2}\" !" "${SCRIPT_VERSION}" |${LOGG} ;;
  param)      Echo ${R} DATE "ERROR ${error}" "Parametre(s) INCORRECT ! \"${param2}\" !" "${SCRIPT_VERSION}" |${LOGG} ;;
  missing)    Echo ${R} DATE "ERROR ${error}" "Parametre \"${param2}\" MANQUANT !" "${SCRIPT_VERSION}" |${LOGG} ;;
  rights)     Echo ${R} DATE "ERROR ${error}" "${param2} n'a pas les droits d'${params} ! Suite impossible !" "${SCRIPT_VERSION}" |${LOGG} ;;
  time)       Echo ${R} DATE "ERROR ${error}" "Mauvaise heure en parametre : \"${param2}\" - KO !" "${SCRIPT_VERSION}" |${LOGG} ;;
  tns)        Echo ${R} DATE "ERROR ${error}" "Base \"${param2}\" n'existe pas ou injoignable ! Suite impossible !" "${SCRIPT_VERSION}" |${LOGG} ;;
  unzip)      Echo ${R} DATE "ERROR ${error}" "la decompression de \"${param2}\" a echoue !" "${SCRIPT_VERSION}" |${LOGG} ;;
  user)       Echo ${R} DATE "ERROR ${error}" "Vous n'etes pas l'utilisateur \"${param2}\" !" "${SCRIPT_VERSION}" |${LOGG} ;;
  var)        Echo ${R} DATE "ERROR ${error}" "la variable ${R}\$${param2} n'existe pas ! Suite impossible !" "${SCRIPT_VERSION}" |${LOGG} ;;
  wasapp)     Echo ${R} DATE "ERROR ${error}" "l'application \"${param2}\" n'existe pas ! Suite du Jython impossible !" "${SCRIPT_VERSION}" |${LOGG} ;;
  write)      Echo ${R} DATE "ERROR ${error}" "PAS de droits en ECRITURE sur \"${param2}\" !" "${SCRIPT_VERSION}" |${LOGG} ;;
  OS)         Echo ${R} DATE "ERROR ${error}" "OS \"${param2}\" non pris en charge !" "${SCRIPT_VERSION}" |${LOGG} ;;
  *)          Echo ${R} DATE "ERROR ${error}" "\"${param2}\"" "${SCRIPT_VERSION}" |${LOGG} ;;
esac
$Debug &&   Echo ${r} DATE "Debug=$Debug    Verbose=$Verbose" "PPID=$PPID PID=$$ SCRIPT=$SCRIPT PARENT_FUNCTION1=${FUNCNAME[1]} PARENT_FUNCTION2=${FUNCNAME[2]}" "${SCRIPT_VERSION}"
(($CR != 0)) && EXIT $CR
return 0
